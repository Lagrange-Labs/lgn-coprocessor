{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_strategyManager",
          "type": "address",
          "internalType": "contract IStrategyManager"
        },
        {
          "name": "_slasher",
          "type": "address",
          "internalType": "contract ISlasher"
        },
        {
          "name": "_eigenPodManager",
          "type": "address",
          "internalType": "contract IEigenPodManager"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "DELEGATION_APPROVAL_TYPEHASH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "DOMAIN_TYPEHASH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_STAKER_OPT_OUT_WINDOW_BLOCKS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_WITHDRAWAL_DELAY_BLOCKS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "STAKER_DELEGATION_TYPEHASH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "beaconChainETHStrategy",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateCurrentStakerDelegationDigestHash",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "expiry",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateDelegationApprovalDigestHash",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_delegationApprover",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "approverSalt",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "expiry",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateStakerDelegationDigestHash",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_stakerNonce",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "expiry",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateWithdrawalRoot",
      "inputs": [
        {
          "name": "withdrawal",
          "type": "tuple",
          "internalType": "struct IDelegationManager.Withdrawal",
          "components": [
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegatedTo",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "shares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "completeQueuedWithdrawal",
      "inputs": [
        {
          "name": "withdrawal",
          "type": "tuple",
          "internalType": "struct IDelegationManager.Withdrawal",
          "components": [
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegatedTo",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "shares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "tokens",
          "type": "address[]",
          "internalType": "contract IERC20[]"
        },
        {
          "name": "middlewareTimesIndex",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "receiveAsTokens",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "completeQueuedWithdrawals",
      "inputs": [
        {
          "name": "withdrawals",
          "type": "tuple[]",
          "internalType": "struct IDelegationManager.Withdrawal[]",
          "components": [
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegatedTo",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "shares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        },
        {
          "name": "tokens",
          "type": "address[][]",
          "internalType": "contract IERC20[][]"
        },
        {
          "name": "middlewareTimesIndexes",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "receiveAsTokens",
          "type": "bool[]",
          "internalType": "bool[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "cumulativeWithdrawalsQueued",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decreaseDelegatedShares",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        },
        {
          "name": "shares",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "delegateTo",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "approverSignatureAndExpiry",
          "type": "tuple",
          "internalType": "struct ISignatureUtils.SignatureWithExpiry",
          "components": [
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "expiry",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "approverSalt",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "delegateToBySignature",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "stakerSignatureAndExpiry",
          "type": "tuple",
          "internalType": "struct ISignatureUtils.SignatureWithExpiry",
          "components": [
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "expiry",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "approverSignatureAndExpiry",
          "type": "tuple",
          "internalType": "struct ISignatureUtils.SignatureWithExpiry",
          "components": [
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "expiry",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "approverSalt",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "delegatedTo",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "delegationApprover",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "delegationApproverSaltIsSpent",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "domainSeparator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "earningsReceiver",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "eigenPodManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IEigenPodManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDelegatableShares",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorShares",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getWithdrawalDelay",
      "inputs": [
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "increaseDelegatedShares",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        },
        {
          "name": "shares",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "initialOwner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_pauserRegistry",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        },
        {
          "name": "initialPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_minWithdrawalDelayBlocks",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "_withdrawalDelayBlocks",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isDelegated",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperator",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "migrateQueuedWithdrawals",
      "inputs": [
        {
          "name": "withdrawalsToMigrate",
          "type": "tuple[]",
          "internalType": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]",
          "components": [
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "shares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawerAndNonce",
              "type": "tuple",
              "internalType": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
              "components": [
                {
                  "name": "withdrawer",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "nonce",
                  "type": "uint96",
                  "internalType": "uint96"
                }
              ]
            },
            {
              "name": "withdrawalStartBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "delegatedAddress",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "minWithdrawalDelayBlocks",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "modifyOperatorDetails",
      "inputs": [
        {
          "name": "newOperatorDetails",
          "type": "tuple",
          "internalType": "struct IDelegationManager.OperatorDetails",
          "components": [
            {
              "name": "earningsReceiver",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegationApprover",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "stakerOptOutWindowBlocks",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "operatorDetails",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IDelegationManager.OperatorDetails",
          "components": [
            {
              "name": "earningsReceiver",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegationApprover",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "stakerOptOutWindowBlocks",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "operatorShares",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pauseAll",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [
        {
          "name": "index",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauserRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pendingWithdrawals",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "queueWithdrawals",
      "inputs": [
        {
          "name": "queuedWithdrawalParams",
          "type": "tuple[]",
          "internalType": "struct IDelegationManager.QueuedWithdrawalParams[]",
          "components": [
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "shares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "registerAsOperator",
      "inputs": [
        {
          "name": "registeringOperatorDetails",
          "type": "tuple",
          "internalType": "struct IDelegationManager.OperatorDetails",
          "components": [
            {
              "name": "earningsReceiver",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegationApprover",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "stakerOptOutWindowBlocks",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "metadataURI",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMinWithdrawalDelayBlocks",
      "inputs": [
        {
          "name": "newMinWithdrawalDelayBlocks",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setPauserRegistry",
      "inputs": [
        {
          "name": "newPauserRegistry",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setStrategyWithdrawalDelayBlocks",
      "inputs": [
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "withdrawalDelayBlocks",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "slasher",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract ISlasher"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "stakerNonce",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "stakerOptOutWindowBlocks",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "strategyManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IStrategyManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "strategyWithdrawalDelayBlocks",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "undelegate",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "withdrawalRoots",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateOperatorMetadataURI",
      "inputs": [
        {
          "name": "metadataURI",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MinWithdrawalDelayBlocksSet",
      "inputs": [
        {
          "name": "previousValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorDetailsModified",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOperatorDetails",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IDelegationManager.OperatorDetails",
          "components": [
            {
              "name": "earningsReceiver",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegationApprover",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "stakerOptOutWindowBlocks",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorMetadataURIUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorRegistered",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operatorDetails",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IDelegationManager.OperatorDetails",
          "components": [
            {
              "name": "earningsReceiver",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegationApprover",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "stakerOptOutWindowBlocks",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSharesDecreased",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "staker",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "shares",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSharesIncreased",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "staker",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "shares",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PauserRegistrySet",
      "inputs": [
        {
          "name": "pauserRegistry",
          "type": "address",
          "indexed": false,
          "internalType": "contract IPauserRegistry"
        },
        {
          "name": "newPauserRegistry",
          "type": "address",
          "indexed": false,
          "internalType": "contract IPauserRegistry"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakerDelegated",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakerForceUndelegated",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakerUndelegated",
      "inputs": [
        {
          "name": "staker",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StrategyWithdrawalDelayBlocksSet",
      "inputs": [
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "previousValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WithdrawalCompleted",
      "inputs": [
        {
          "name": "withdrawalRoot",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WithdrawalMigrated",
      "inputs": [
        {
          "name": "oldWithdrawalRoot",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "newWithdrawalRoot",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WithdrawalQueued",
      "inputs": [
        {
          "name": "withdrawalRoot",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "withdrawal",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IDelegationManager.Withdrawal",
          "components": [
            {
              "name": "staker",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "delegatedTo",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "withdrawer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startBlock",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "shares",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1137:48922:102:-:0;;;2862:284;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5650:34:103;;;;;5694;;;;;5738:18;;;;3074:22:102::1;:20;:22::i;:::-;-1:-1:-1::0;;3126:13:102::1;3106:33;::::0;-1:-1:-1;1137:48922:102;;5388:279:40;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:40;;1018:2:229;5447:66:40;;;1000:21:229;1057:2;1037:18;;;1030:30;1096:34;1076:18;;;1069:62;-1:-1:-1;;;1147:18:229;;;1140:37;1194:19;;5447:66:40;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:40;5588:15;5573:30;;;;;;5622:28;;1366:36:229;;;5622:28:40;;1354:2:229;1339:18;5622:28:40;;;;;;;5523:138;5388:279::o;14:149:229:-;-1:-1:-1;;;;;107:31:229;;97:42;;87:70;;153:1;150;143:12;87:70;14:149;:::o;168:643::-;326:6;334;342;395:2;383:9;374:7;370:23;366:32;363:52;;;411:1;408;401:12;363:52;443:9;437:16;462:49;505:5;462:49;:::i;:::-;580:2;565:18;;559:25;530:5;;-1:-1:-1;593:51:229;559:25;593:51;:::i;:::-;715:2;700:18;;694:25;663:7;;-1:-1:-1;728:51:229;694:25;728:51;:::i;:::-;798:7;788:17;;;168:643;;;;;:::o;1224:184::-;1137:48922:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106103785760003560e01c806360d7faed116101d3578063b7f06ebe11610104578063cf80873e116100a2578063f16172b01161007c578063f16172b01461097d578063f2fde38b14610990578063f698da25146109a3578063fabc1cbc146109ab57600080fd5b8063cf80873e14610936578063da8be86414610957578063eea9064b1461096a57600080fd5b8063c488375a116100de578063c488375a14610853578063c5e480db14610873578063c94b511114610919578063ca661c041461092c57600080fd5b8063b7f06ebe146107f9578063bb45fef21461081c578063c448feb81461084a57600080fd5b8063886f1195116101715780639104c3191161014b5780639104c3191461078457806399be81c81461079f578063a1788484146107b2578063b1344271146107d257600080fd5b8063886f1195146107405780638da5cb5b14610753578063900413471461076457600080fd5b80636d70f7ae116101ad5780636d70f7ae146106e7578063715018a6146106fa578063778e55f3146107025780637f5480711461072d57600080fd5b806360d7faed14610698578063635bbd10146106ab57806365da1264146106be57600080fd5b806329c77d4f116102ad5780634fc40b611161024b5780635ac86ab7116102255780635ac86ab71461062e5780635c975abb146106515780635cfe8d2c146106595780635f966f141461066c57600080fd5b80634fc40b6114610609578063595c6a6714610613578063597b36da1461061b57600080fd5b80633cdeb5e0116102875780633cdeb5e0146105695780633e28391d1461059857806343377382146105bb5780634665bcda146105e257600080fd5b806329c77d4f146104f7578063334043961461051757806339b70e381461052a57600080fd5b8063136439dd1161031a5780631bbce091116102f45780631bbce0911461049757806320606b70146104aa57806322bf40e4146104d157806328a573ae146104e457600080fd5b8063136439dd146104385780631522bf021461044b578063169283651461045e57600080fd5b80630dd8dd02116103565780630dd8dd02146103dd5780630f589e59146103fd57806310d67a2f14610412578063132d49671461042557600080fd5b80630449ca391461037d57806304a4f979146103a35780630b9f487a146103ca575b600080fd5b61039061038b366004614adb565b6109be565b6040519081526020015b60405180910390f35b6103907f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad81565b6103906103d8366004614b41565b610a43565b6103f06103eb366004614adb565b610b05565b60405161039a9190614b9c565b61041061040b366004614c39565b610e6e565b005b610410610420366004614c8c565b610fbe565b610410610433366004614cb0565b611071565b610410610446366004614cf1565b611128565b610410610459366004614d0a565b611267565b61039061046c366004614c8c565b6001600160a01b0316600090815260996020526040902060010154600160a01b900463ffffffff1690565b6103906104a5366004614cb0565b61127b565b6103907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6104106104df366004614d75565b6112a9565b6104106104f2366004614cb0565b6113ed565b610390610505366004614c8c565b609b6020526000908152604090205481565b610410610525366004614e1c565b61149d565b6105517f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161039a565b610551610577366004614c8c565b6001600160a01b039081166000908152609960205260409020600101541690565b6105ab6105a6366004614c8c565b6115da565b604051901515815260200161039a565b6103907f39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b81565b6105517f000000000000000000000000000000000000000000000000000000000000000081565b6103906213c68081565b6104106115fa565b61039061062936600461513b565b6116c1565b6105ab61063c366004615177565b606654600160ff9092169190911b9081161490565b606654610390565b6104106106673660046151ed565b6116f1565b61055161067a366004614c8c565b6001600160a01b039081166000908152609960205260409020541690565b6104106106a636600461534d565b61199c565b6104106106b9366004614cf1565b611a37565b6105516106cc366004614c8c565b609a602052600090815260409020546001600160a01b031681565b6105ab6106f5366004614c8c565b611a48565b610410611a68565b6103906107103660046153dc565b609860209081526000928352604080842090915290825290205481565b61041061073b3660046154bd565b611a7c565b606554610551906001600160a01b031681565b6033546001600160a01b0316610551565b61077761077236600461554d565b611b81565b60405161039a91906155d7565b61055173beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081565b6104106107ad3660046155ea565b611c5b565b6103906107c0366004614c8c565b609f6020526000908152604090205481565b6105517f000000000000000000000000000000000000000000000000000000000000000081565b6105ab610807366004614cf1565b609e6020526000908152604090205460ff1681565b6105ab61082a36600461561f565b609c60209081526000928352604080842090915290825290205460ff1681565b610390609d5481565b610390610861366004614c8c565b60a16020526000908152604090205481565b6108e3610881366004614c8c565b6040805160608082018352600080835260208084018290529284018190526001600160a01b03948516815260998352839020835191820184528054851682526001015493841691810191909152600160a01b90920463ffffffff169082015290565b6040805182516001600160a01b039081168252602080850151909116908201529181015163ffffffff169082015260600161039a565b61039061092736600461564b565b611d2d565b61039062034bc081565b610949610944366004614c8c565b611de6565b60405161039a9291906156cc565b6103f0610965366004614c8c565b61219e565b6104106109783660046156f1565b612662565b61041061098b366004615749565b61266e565b61041061099e366004614c8c565b6126ff565b610390612775565b6104106109b9366004614cf1565b6127b3565b609d54600090815b83811015610a3b57600060a160008787858181106109e6576109e6615765565b90506020020160208101906109fb9190614c8c565b6001600160a01b03166001600160a01b0316815260200190815260200160002054905082811115610a2a578092505b50610a3481615791565b90506109c6565b509392505050565b604080517f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad6020808301919091526001600160a01b038681168385015288811660608401528716608083015260a0820185905260c08083018590528351808403909101815260e0909201909252805191012060009081610ac1612775565b60405161190160f01b602082015260228101919091526042810183905260620160408051808303601f19018152919052805160209091012098975050505050505050565b60665460609060019060029081161415610b3a5760405162461bcd60e51b8152600401610b31906157ac565b60405180910390fd5b6000836001600160401b03811115610b5457610b54614ebe565b604051908082528060200260200182016040528015610b7d578160200160208202803683370190505b50336000908152609a60205260408120549192506001600160a01b03909116905b85811015610e6357868682818110610bb857610bb8615765565b9050602002810190610bca91906157e3565b610bd8906020810190615803565b9050878783818110610bec57610bec615765565b9050602002810190610bfe91906157e3565b610c089080615803565b905014610c7d5760405162461bcd60e51b815260206004820152603860248201527f44656c65676174696f6e4d616e616765722e717565756557697468647261776160448201527f6c3a20696e707574206c656e677468206d69736d6174636800000000000000006064820152608401610b31565b33878783818110610c9057610c90615765565b9050602002810190610ca291906157e3565b610cb3906060810190604001614c8c565b6001600160a01b031614610d2f5760405162461bcd60e51b815260206004820152603c60248201527f44656c65676174696f6e4d616e616765722e717565756557697468647261776160448201527f6c3a2077697468647261776572206d757374206265207374616b6572000000006064820152608401610b31565b610e343383898985818110610d4657610d46615765565b9050602002810190610d5891906157e3565b610d69906060810190604001614c8c565b8a8a86818110610d7b57610d7b615765565b9050602002810190610d8d91906157e3565b610d979080615803565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508e92508d9150889050818110610ddd57610ddd615765565b9050602002810190610def91906157e3565b610dfd906020810190615803565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061290f92505050565b838281518110610e4657610e46615765565b602090810291909101015280610e5b81615791565b915050610b9e565b509095945050505050565b336000908152609960205260409020546001600160a01b031615610f085760405162461bcd60e51b815260206004820152604560248201527f44656c65676174696f6e4d616e616765722e726567697374657241734f70657260448201527f61746f723a206f70657261746f722068617320616c72656164792072656769736064820152641d195c995960da1b608482015260a401610b31565b610f123384612ecf565b604080518082019091526060815260006020820152610f34338083600061316b565b336001600160a01b03167f8e8485583a2310d41f7c82b9427d0bd49bad74bb9cff9d3402a29d8f9b28a0e285604051610f6d919061584c565b60405180910390a2336001600160a01b03167f02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b67080908484604051610fb092919061589e565b60405180910390a250505050565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611011573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103591906158cd565b6001600160a01b0316336001600160a01b0316146110655760405162461bcd60e51b8152600401610b31906158ea565b61106e81613510565b50565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806110d05750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6110ec5760405162461bcd60e51b8152600401610b3190615934565b6110f5836115da565b15611123576001600160a01b038084166000908152609a60205260409020541661112181858585613607565b505b505050565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015611170573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111949190615991565b6111b05760405162461bcd60e51b8152600401610b31906159ae565b606654818116146112295760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c69747900000000000000006064820152608401610b31565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b61126f613682565b611121848484846136dc565b6001600160a01b0383166000908152609b60205260408120546112a085828686611d2d565b95945050505050565b600054610100900460ff16158080156112c95750600054600160ff909116105b806112e35750303b1580156112e3575060005460ff166001145b6113465760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b31565b6000805460ff191660011790558015611369576000805461ff0019166101001790555b6113738888613902565b61137b6139e8565b60975561138789613a7f565b61139086613ad1565b61139c858585856136dc565b80156113e2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061144c5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6114685760405162461bcd60e51b8152600401610b3190615934565b611471836115da565b15611123576001600160a01b038084166000908152609a60205260409020541661112181858585613bcb565b606654600290600490811614156114c65760405162461bcd60e51b8152600401610b31906157ac565b600260c95414156115195760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b31565b600260c95560005b888110156115c9576115b98a8a8381811061153e5761153e615765565b905060200281019061155091906159f6565b89898481811061156257611562615765565b90506020028101906115749190615803565b89898681811061158657611586615765565b9050602002013588888781811061159f5761159f615765565b90506020020160208101906115b49190615a0c565b613c46565b6115c281615791565b9050611521565b5050600160c9555050505050505050565b6001600160a01b039081166000908152609a602052604090205416151590565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015611642573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116669190615991565b6116825760405162461bcd60e51b8152600401610b31906159ae565b600019606681905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b6000816040516020016116d49190615a9d565b604051602081830303815290604052805190602001209050919050565b60005b815181101561199857600082828151811061171157611711615765565b602002602001015190506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cd293f6f846040518263ffffffff1660e01b815260040161176a9190615ab0565b60408051808303816000875af1158015611788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ac9190615b5c565b91509150811561198a576040808401516001600160a01b0381166000908152609f602052918220805491928291906117e383615791565b919050555060006040518060e00160405280846001600160a01b031681526020018760a001516001600160a01b031681526020018760600151600001516001600160a01b03168152602001838152602001876080015163ffffffff16815260200187600001518152602001876020015181525090506000611863826116c1565b6000818152609e602052604090205490915060ff16156118f95760405162461bcd60e51b815260206004820152604560248201527f44656c65676174696f6e4d616e616765722e6d6967726174655175657565645760448201527f69746864726177616c733a207769746864726177616c20616c72656164792065606482015264786973747360d81b608482015260a401610b31565b6000818152609e602052604090819020805460ff19166001179055517f9009ab153e8014fbfb02f2217f5cde7aa7f9ad734ae85ca3ee3f4ca2fdd499f9906119449083908590615b8a565b60405180910390a160408051868152602081018390527fdc00758b65eef71dc3780c04ebe36cab6bdb266c3a698187e29e0f0dca012630910160405180910390a1505050505b8360010193505050506116f4565b5050565b606654600290600490811614156119c55760405162461bcd60e51b8152600401610b31906157ac565b600260c9541415611a185760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b31565b600260c955611a2a8686868686613c46565b5050600160c95550505050565b611a3f613682565b61106e81613ad1565b6001600160a01b0390811660009081526099602052604090205416151590565b611a70613682565b611a7a6000613a7f565b565b4283602001511015611b005760405162461bcd60e51b815260206004820152604160248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f4279536960448201527f676e61747572653a207374616b6572207369676e6174757265206578706972656064820152601960fa1b608482015260a401610b31565b6000609b6000876001600160a01b03166001600160a01b031681526020019081526020016000205490506000611b3c8783888860200151611d2d565b6001600160a01b0388166000908152609b602052604090206001840190558551909150611b6c9088908390614430565b611b788787868661316b565b50505050505050565b6060600082516001600160401b03811115611b9e57611b9e614ebe565b604051908082528060200260200182016040528015611bc7578160200160208202803683370190505b50905060005b8351811015610a3b576001600160a01b03851660009081526098602052604081208551909190869084908110611c0557611c05615765565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110611c4057611c40615765565b6020908102919091010152611c5481615791565b9050611bcd565b611c6433611a48565b611ce65760405162461bcd60e51b815260206004820152604760248201527f44656c65676174696f6e4d616e616765722e7570646174654f70657261746f7260448201527f4d657461646174615552493a2063616c6c6572206d75737420626520616e206f6064820152663832b930ba37b960c91b608482015260a401610b31565b336001600160a01b03167f02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b67080908383604051611d2192919061589e565b60405180910390a25050565b604080517f39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b6020808301919091526001600160a01b0387811683850152851660608301526080820186905260a08083018590528351808403909101815260c0909201909252805191012060009081611da3612775565b60405161190160f01b602082015260228101919091526042810183905260620160408051808303601f190181529190528051602090910120979650505050505050565b6040516360f4062b60e01b81526001600160a01b03828116600483015260609182916000917f0000000000000000000000000000000000000000000000000000000000000000909116906360f4062b90602401602060405180830381865afa158015611e56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7a9190615ba3565b6040516394f649dd60e01b81526001600160a01b03868116600483015291925060009182917f0000000000000000000000000000000000000000000000000000000000000000909116906394f649dd90602401600060405180830381865afa158015611eea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611f129190810190615c17565b9150915060008313611f2957909590945092505050565b606080835160001415611fe3576040805160018082528183019092529060208083019080368337505060408051600180825281830190925292945090506020808301908036833701905050905073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac082600081518110611f9e57611f9e615765565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600081518110611fd257611fd2615765565b602002602001018181525050612191565b8351611ff0906001615cd1565b6001600160401b0381111561200757612007614ebe565b604051908082528060200260200182016040528015612030578160200160208202803683370190505b50915081516001600160401b0381111561204c5761204c614ebe565b604051908082528060200260200182016040528015612075578160200160208202803683370190505b50905060005b845181101561210f5784818151811061209657612096615765565b60200260200101518382815181106120b0576120b0615765565b60200260200101906001600160a01b031690816001600160a01b0316815250508381815181106120e2576120e2615765565b60200260200101518282815181106120fc576120fc615765565b602090810291909101015260010161207b565b5073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac082600184516121349190615ce9565b8151811061214457612144615765565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600184516121749190615ce9565b8151811061218457612184615765565b6020026020010181815250505b9097909650945050505050565b606654606090600190600290811614156121ca5760405162461bcd60e51b8152600401610b31906157ac565b6121d3836115da565b6122535760405162461bcd60e51b8152602060048201526044602482018190527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a207374908201527f616b6572206d7573742062652064656c65676174656420746f20756e64656c656064820152636761746560e01b608482015260a401610b31565b61225c83611a48565b156122cf5760405162461bcd60e51b815260206004820152603d60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a206f7060448201527f657261746f72732063616e6e6f7420626520756e64656c6567617465640000006064820152608401610b31565b6001600160a01b03831661234b5760405162461bcd60e51b815260206004820152603c60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20636160448201527f6e6e6f7420756e64656c6567617465207a65726f2061646472657373000000006064820152608401610b31565b6001600160a01b038084166000818152609a60205260409020549091169033148061237e5750336001600160a01b038216145b806123a557506001600160a01b038181166000908152609960205260409020600101541633145b6124175760405162461bcd60e51b815260206004820152603d60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20636160448201527f6c6c65722063616e6e6f7420756e64656c6567617465207374616b65720000006064820152608401610b31565b60008061242386611de6565b9092509050336001600160a01b0387161461247957826001600160a01b0316866001600160a01b03167ff0eddf07e6ea14f388b47e1e94a0f464ecbd9eed4171130e0fc0e99fb4030a8a60405160405180910390a35b826001600160a01b0316866001600160a01b03167ffee30966a256b71e14bc0ebfc94315e28ef4a97a7131a9e2b7a310a73af4467660405160405180910390a36001600160a01b0386166000908152609a6020526040902080546001600160a01b031916905581516124fb576040805160008152602081019091529450612659565b81516001600160401b0381111561251457612514614ebe565b60405190808252806020026020018201604052801561253d578160200160208202803683370190505b50945060005b8251811015612657576040805160018082528183019092526000916020808301908036833750506040805160018082528183019092529293506000929150602080830190803683370190505090508483815181106125a3576125a3615765565b6020026020010151826000815181106125be576125be615765565b60200260200101906001600160a01b031690816001600160a01b0316815250508383815181106125f0576125f0615765565b60200260200101518160008151811061260b5761260b615765565b60200260200101818152505061262489878b858561290f565b88848151811061263657612636615765565b6020026020010181815250505050808061264f90615791565b915050612543565b505b50505050919050565b6111233384848461316b565b61267733611a48565b6126f55760405162461bcd60e51b815260206004820152604360248201527f44656c65676174696f6e4d616e616765722e6d6f646966794f70657261746f7260448201527f44657461696c733a2063616c6c6572206d75737420626520616e206f706572616064820152623a37b960e91b608482015260a401610b31565b61106e3382612ecf565b612707613682565b6001600160a01b03811661276c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b31565b61106e81613a7f565b60007f00000000000000000000000000000000000000000000000000000000000000004614156127a6575060975490565b6127ae6139e8565b905090565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612806573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061282a91906158cd565b6001600160a01b0316336001600160a01b03161461285a5760405162461bcd60e51b8152600401610b31906158ea565b6066541981196066541916146128d85760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c69747900000000000000006064820152608401610b31565b606681905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200161125c565b60006001600160a01b0386166129a65760405162461bcd60e51b815260206004820152605060248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a207374616b65722063616e6e6f7460648201526f206265207a65726f206164647265737360801b608482015260a401610b31565b8251612a305760405162461bcd60e51b815260206004820152604d60248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a207374726174656769657320636160648201526c6e6e6f7420626520656d70747960981b608482015260a401610b31565b60005b8351811015612ddd576001600160a01b03861615612a8957612a898688868481518110612a6257612a62615765565b6020026020010151868581518110612a7c57612a7c615765565b6020026020010151613607565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06001600160a01b0316848281518110612ab957612ab9615765565b60200260200101516001600160a01b03161415612b82577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663beffbb8988858481518110612b1257612b12615765565b60200260200101516040518363ffffffff1660e01b8152600401612b4b9291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b158015612b6557600080fd5b505af1158015612b79573d6000803e3d6000fd5b50505050612dd5565b846001600160a01b0316876001600160a01b03161480612c5457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639b4da03d858381518110612bde57612bde615765565b60200260200101516040518263ffffffff1660e01b8152600401612c1191906001600160a01b0391909116815260200190565b602060405180830381865afa158015612c2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c529190615991565b155b612d205760405162461bcd60e51b8152602060048201526084602482018190527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448301527f6e6451756575655769746864726177616c3a2077697468647261776572206d7560648301527f73742062652073616d652061646472657373206173207374616b657220696620908201527f746869726450617274795472616e7366657273466f7262696464656e2061726560a482015263081cd95d60e21b60c482015260e401610b31565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638c80d4e588868481518110612d6257612d62615765565b6020026020010151868581518110612d7c57612d7c615765565b60200260200101516040518463ffffffff1660e01b8152600401612da293929190615d00565b600060405180830381600087803b158015612dbc57600080fd5b505af1158015612dd0573d6000803e3d6000fd5b505050505b600101612a33565b506001600160a01b0386166000908152609f60205260408120805491829190612e0583615791565b919050555060006040518060e00160405280896001600160a01b03168152602001886001600160a01b03168152602001876001600160a01b031681526020018381526020014363ffffffff1681526020018681526020018581525090506000612e6d826116c1565b6000818152609e602052604090819020805460ff19166001179055519091507f9009ab153e8014fbfb02f2217f5cde7aa7f9ad734ae85ca3ee3f4ca2fdd499f990612ebb9083908590615b8a565b60405180910390a198975050505050505050565b6000612ede6020830183614c8c565b6001600160a01b03161415612f785760405162461bcd60e51b815260206004820152605460248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a2063616e6e6f742073657420606561726e696e677352656365696064820152737665726020746f207a65726f206164647265737360601b608482015260a401610b31565b6213c680612f8c6060830160408401615d24565b63ffffffff1611156130415760405162461bcd60e51b815260206004820152606c60248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a207374616b65724f70744f757457696e646f77426c6f636b732060648201527f63616e6e6f74206265203e204d41585f5354414b45525f4f50545f4f55545f5760848201526b494e444f575f424c4f434b5360a01b60a482015260c401610b31565b6001600160a01b0382166000908152609960205260409081902060010154600160a01b900463ffffffff169061307d9060608401908401615d24565b63ffffffff1610156131135760405162461bcd60e51b815260206004820152605360248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a207374616b65724f70744f757457696e646f77426c6f636b732060648201527218d85b9b9bdd08189948191958dc99585cd959606a1b608482015260a401610b31565b6001600160a01b038216600090815260996020526040902081906131378282615d61565b505060405133907ffebe5cd24b2cbc7b065b9d0fdeb904461e4afcff57dd57acda1e7832031ba7ac90611d2190849061584c565b606654600090600190811614156131945760405162461bcd60e51b8152600401610b31906157ac565b61319d856115da565b1561321a5760405162461bcd60e51b815260206004820152604160248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2073746160448201527f6b657220697320616c7265616479206163746976656c792064656c65676174656064820152601960fa1b608482015260a401610b31565b61322384611a48565b6132a35760405162461bcd60e51b815260206004820152604560248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a206f706560448201527f7261746f72206973206e6f74207265676973746572656420696e20456967656e6064820152642630bcb2b960d91b608482015260a401610b31565b6001600160a01b038085166000908152609960205260409020600101541680158015906132d95750336001600160a01b03821614155b80156132ee5750336001600160a01b03861614155b1561345b57428460200151101561336d5760405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2061707060448201527f726f766572207369676e617475726520657870697265640000000000000000006064820152608401610b31565b6001600160a01b0381166000908152609c6020908152604080832086845290915290205460ff16156134075760405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2061707060448201527f726f76657253616c7420616c7265616479207370656e740000000000000000006064820152608401610b31565b6001600160a01b0381166000908152609c6020908152604080832086845282528220805460ff19166001179055850151613448908890889085908890610a43565b905061345982828760000151614430565b505b6001600160a01b038681166000818152609a602052604080822080546001600160a01b031916948a169485179055517fc3ee9f2e5fda98e8066a1f745b2df9285f416fe98cf2559cd21484b3d87433049190a36000806134ba88611de6565b9150915060005b82518110156113e257613508888a8584815181106134e1576134e1615765565b60200260200101518585815181106134fb576134fb615765565b6020026020010151613bcb565b6001016134c1565b6001600160a01b03811661359e5760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a401610b31565b606554604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0380851660009081526098602090815260408083209386168352929052908120805483929061363e908490615ce9565b92505081905550836001600160a01b03167f6909600037b75d7b4733aedd815442b5ec018a827751c832aaff64eba5d6d2dd848484604051610fb093929190615d00565b6033546001600160a01b03163314611a7a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b31565b8281146137645760405162461bcd60e51b815260206004820152604a60248201527f44656c65676174696f6e4d616e616765722e5f7365745374726174656779576960448201527f746864726177616c44656c6179426c6f636b733a20696e707574206c656e67746064820152690d040dad2e6dac2e8c6d60b31b608482015260a401610b31565b8260005b818110156138fa57600086868381811061378457613784615765565b90506020020160208101906137999190614c8c565b6001600160a01b038116600090815260a160205260408120549192508686858181106137c7576137c7615765565b90506020020135905062034bc081111561388b5760405162461bcd60e51b815260206004820152607360248201527f44656c65676174696f6e4d616e616765722e5f7365745374726174656779576960448201527f746864726177616c44656c6179426c6f636b733a205f7769746864726177616c60648201527f44656c6179426c6f636b732063616e6e6f74206265203e204d41585f5749544860848201527244524157414c5f44454c41595f424c4f434b5360681b60a482015260c401610b31565b6001600160a01b038316600081815260a160209081526040918290208490558151928352820184905281018290527f0e7efa738e8b0ce6376a0c1af471655540d2e9a81647d7b09ed823018426576d9060600160405180910390a1505050806138f390615791565b9050613768565b505050505050565b6065546001600160a01b031615801561392357506001600160a01b03821615155b6139a55760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a401610b31565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a261199882613510565b604080518082018252600a81526922b4b3b2b72630bcb2b960b11b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea81840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b62034bc0811115613b8a5760405162461bcd60e51b815260206004820152607160248201527f44656c65676174696f6e4d616e616765722e5f7365744d696e5769746864726160448201527f77616c44656c6179426c6f636b733a205f6d696e5769746864726177616c446560648201527f6c6179426c6f636b732063616e6e6f74206265203e204d41585f5749544844526084820152704157414c5f44454c41595f424c4f434b5360781b60a482015260c401610b31565b609d5460408051918252602082018390527fafa003cd76f87ff9d62b35beea889920f33c0c42b8d45b74954d61d50f4b6b69910160405180910390a1609d55565b6001600160a01b03808516600090815260986020908152604080832093861683529290529081208054839290613c02908490615cd1565b92505081905550836001600160a01b03167f1ec042c965e2edd7107b51188ee0f383e22e76179041ab3a9d18ff151405166c848484604051610fb093929190615d00565b6000613c5461062987615dc4565b6000818152609e602052604090205490915060ff16613cd55760405162461bcd60e51b81526020600482015260436024820152600080516020615efc83398151915260448201527f645769746864726177616c3a20616374696f6e206973206e6f7420696e20717560648201526265756560e81b608482015260a401610b31565b609d544390613cea60a0890160808a01615d24565b63ffffffff16613cfa9190615cd1565b1115613d825760405162461bcd60e51b815260206004820152605f6024820152600080516020615efc83398151915260448201527f645769746864726177616c3a206d696e5769746864726177616c44656c61794260648201527f6c6f636b7320706572696f6420686173206e6f74207965742070617373656400608482015260a401610b31565b613d926060870160408801614c8c565b6001600160a01b0316336001600160a01b031614613e1f5760405162461bcd60e51b81526020600482015260506024820152600080516020615efc83398151915260448201527f645769746864726177616c3a206f6e6c7920776974686472617765722063616e60648201526f1031b7b6b83632ba329030b1ba34b7b760811b608482015260a401610b31565b8115613ea157613e3260a0870187615803565b85149050613ea15760405162461bcd60e51b81526020600482015260426024820152600080516020615efc83398151915260448201527f645769746864726177616c3a20696e707574206c656e677468206d69736d61746064820152610c6d60f31b608482015260a401610b31565b6000818152609e60205260409020805460ff1916905581156140065760005b613ecd60a0880188615803565b9050811015614000574360a16000613ee860a08b018b615803565b85818110613ef857613ef8615765565b9050602002016020810190613f0d9190614c8c565b6001600160a01b03168152602081019190915260400160002054613f3760a08a0160808b01615d24565b63ffffffff16613f479190615cd1565b1115613f655760405162461bcd60e51b8152600401610b3190615dd6565b613ff8613f756020890189614c8c565b33613f8360a08b018b615803565b85818110613f9357613f93615765565b9050602002016020810190613fa89190614c8c565b613fb560c08c018c615803565b86818110613fc557613fc5615765565b905060200201358a8a87818110613fde57613fde615765565b9050602002016020810190613ff39190614c8c565b6145ea565b600101613ec0565b506143f5565b336000908152609a60205260408120546001600160a01b0316905b61402e60a0890189615803565b90508110156143f2574360a1600061404960a08c018c615803565b8581811061405957614059615765565b905060200201602081019061406e9190614c8c565b6001600160a01b0316815260208101919091526040016000205461409860a08b0160808c01615d24565b63ffffffff166140a89190615cd1565b11156140c65760405162461bcd60e51b8152600401610b3190615dd6565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06140e860a08a018a615803565b838181106140f8576140f8615765565b905060200201602081019061410d9190614c8c565b6001600160a01b0316141561425d57600061412b60208a018a614c8c565b905060006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016630e81073c8361416c60c08e018e615803565b8781811061417c5761417c615765565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af11580156141d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141f49190615ba3565b6001600160a01b038084166000908152609a602052604090205491925016801561425557614255818461422a60a08f018f615803565b8881811061423a5761423a615765565b905060200201602081019061424f9190614c8c565b85613bcb565b5050506143ea565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c4623ea13389898581811061429f5761429f615765565b90506020020160208101906142b49190614c8c565b6142c160a08d018d615803565b868181106142d1576142d1615765565b90506020020160208101906142e69190614c8c565b6142f360c08e018e615803565b8781811061430357614303615765565b60405160e088901b6001600160e01b03191681526001600160a01b03968716600482015294861660248601529290941660448401526020909102013560648201526084019050600060405180830381600087803b15801561436357600080fd5b505af1158015614377573d6000803e3d6000fd5b505050506001600160a01b038216156143ea576143ea823361439c60a08c018c615803565b858181106143ac576143ac615765565b90506020020160208101906143c19190614c8c565b6143ce60c08d018d615803565b868181106143de576143de615765565b90506020020135613bcb565b600101614021565b50505b6040518181527fc97098c2f658800b4df29001527f7324bcdffcf6e8751a699ab920a1eced5b1d9060200160405180910390a1505050505050565b6001600160a01b0383163b1561454a57604051630b135d3f60e11b808252906001600160a01b03851690631626ba7e906144709086908690600401615e5e565b602060405180830381865afa15801561448d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144b19190615ebb565b6001600160e01b031916146111235760405162461bcd60e51b815260206004820152605360248201527f454950313237315369676e61747572655574696c732e636865636b5369676e6160448201527f747572655f454950313237313a2045524331323731207369676e6174757265206064820152721d995c9a599a58d85d1a5bdb8819985a5b1959606a1b608482015260a401610b31565b826001600160a01b031661455e838361472a565b6001600160a01b0316146111235760405162461bcd60e51b815260206004820152604760248201527f454950313237315369676e61747572655574696c732e636865636b5369676e6160448201527f747572655f454950313237313a207369676e6174757265206e6f742066726f6d6064820152661039b4b3b732b960c91b608482015260a401610b31565b6001600160a01b03831673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac014156146955760405162387b1360e81b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063387b13009061465e90889088908790600401615d00565b600060405180830381600087803b15801561467857600080fd5b505af115801561468c573d6000803e3d6000fd5b50505050614723565b60405163c608c7f360e01b81526001600160a01b03858116600483015284811660248301526044820184905282811660648301527f0000000000000000000000000000000000000000000000000000000000000000169063c608c7f390608401600060405180830381600087803b15801561470f57600080fd5b505af11580156113e2573d6000803e3d6000fd5b5050505050565b60008060006147398585614746565b91509150610a3b816147b6565b60008082516041141561477d5760208301516040840151606085015160001a61477187828585614971565b945094505050506147af565b8251604014156147a7576020830151604084015161479c868383614a5e565b9350935050506147af565b506000905060025b9250929050565b60008160048111156147ca576147ca615ee5565b14156147d35750565b60018160048111156147e7576147e7615ee5565b14156148355760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610b31565b600281600481111561484957614849615ee5565b14156148975760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610b31565b60038160048111156148ab576148ab615ee5565b14156149045760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610b31565b600481600481111561491857614918615ee5565b141561106e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610b31565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156149a85750600090506003614a55565b8460ff16601b141580156149c057508460ff16601c14155b156149d15750600090506004614a55565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015614a25573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116614a4e57600060019250925050614a55565b9150600090505b94509492505050565b6000806001600160ff1b03831681614a7b60ff86901c601b615cd1565b9050614a8987828885614971565b935093505050935093915050565b60008083601f840112614aa957600080fd5b5081356001600160401b03811115614ac057600080fd5b6020830191508360208260051b85010111156147af57600080fd5b60008060208385031215614aee57600080fd5b82356001600160401b03811115614b0457600080fd5b614b1085828601614a97565b90969095509350505050565b6001600160a01b038116811461106e57600080fd5b8035614b3c81614b1c565b919050565b600080600080600060a08688031215614b5957600080fd5b8535614b6481614b1c565b94506020860135614b7481614b1c565b93506040860135614b8481614b1c565b94979396509394606081013594506080013592915050565b6020808252825182820181905260009190848201906040850190845b81811015614bd457835183529284019291840191600101614bb8565b50909695505050505050565b600060608284031215614bf257600080fd5b50919050565b60008083601f840112614c0a57600080fd5b5081356001600160401b03811115614c2157600080fd5b6020830191508360208285010111156147af57600080fd5b600080600060808486031215614c4e57600080fd5b614c588585614be0565b925060608401356001600160401b03811115614c7357600080fd5b614c7f86828701614bf8565b9497909650939450505050565b600060208284031215614c9e57600080fd5b8135614ca981614b1c565b9392505050565b600080600060608486031215614cc557600080fd5b8335614cd081614b1c565b92506020840135614ce081614b1c565b929592945050506040919091013590565b600060208284031215614d0357600080fd5b5035919050565b60008060008060408587031215614d2057600080fd5b84356001600160401b0380821115614d3757600080fd5b614d4388838901614a97565b90965094506020870135915080821115614d5c57600080fd5b50614d6987828801614a97565b95989497509550505050565b60008060008060008060008060c0898b031215614d9157600080fd5b8835614d9c81614b1c565b97506020890135614dac81614b1c565b9650604089013595506060890135945060808901356001600160401b0380821115614dd657600080fd5b614de28c838d01614a97565b909650945060a08b0135915080821115614dfb57600080fd5b50614e088b828c01614a97565b999c989b5096995094979396929594505050565b6000806000806000806000806080898b031215614e3857600080fd5b88356001600160401b0380821115614e4f57600080fd5b614e5b8c838d01614a97565b909a50985060208b0135915080821115614e7457600080fd5b614e808c838d01614a97565b909850965060408b0135915080821115614e9957600080fd5b614ea58c838d01614a97565b909650945060608b0135915080821115614dfb57600080fd5b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715614ef657614ef6614ebe565b60405290565b604080519081016001600160401b0381118282101715614ef657614ef6614ebe565b60405160c081016001600160401b0381118282101715614ef657614ef6614ebe565b604051601f8201601f191681016001600160401b0381118282101715614f6857614f68614ebe565b604052919050565b63ffffffff8116811461106e57600080fd5b8035614b3c81614f70565b60006001600160401b03821115614fa657614fa6614ebe565b5060051b60200190565b600082601f830112614fc157600080fd5b81356020614fd6614fd183614f8d565b614f40565b82815260059290921b84018101918181019086841115614ff557600080fd5b8286015b8481101561501957803561500c81614b1c565b8352918301918301614ff9565b509695505050505050565b600082601f83011261503557600080fd5b81356020615045614fd183614f8d565b82815260059290921b8401810191818101908684111561506457600080fd5b8286015b848110156150195780358352918301918301615068565b600060e0828403121561509157600080fd5b615099614ed4565b90506150a482614b31565b81526150b260208301614b31565b60208201526150c360408301614b31565b6040820152606082013560608201526150de60808301614f82565b608082015260a08201356001600160401b03808211156150fd57600080fd5b61510985838601614fb0565b60a084015260c084013591508082111561512257600080fd5b5061512f84828501615024565b60c08301525092915050565b60006020828403121561514d57600080fd5b81356001600160401b0381111561516357600080fd5b61516f8482850161507f565b949350505050565b60006020828403121561518957600080fd5b813560ff81168114614ca957600080fd5b6000604082840312156151ac57600080fd5b6151b4614efc565b905081356151c181614b1c565b815260208201356bffffffffffffffffffffffff811681146151e257600080fd5b602082015292915050565b6000602080838503121561520057600080fd5b82356001600160401b038082111561521757600080fd5b818501915085601f83011261522b57600080fd5b8135615239614fd182614f8d565b81815260059190911b8301840190848101908883111561525857600080fd5b8585015b83811015615332578035858111156152745760008081fd5b860160e0818c03601f190181131561528c5760008081fd5b615294614f1e565b89830135888111156152a65760008081fd5b6152b48e8c83870101614fb0565b825250604080840135898111156152cb5760008081fd5b6152d98f8d83880101615024565b8c8401525060606152eb818601614b31565b82840152608091506152ff8f83870161519a565b9083015261530f60c08501614f82565b9082015261531e838301614b31565b60a08201528552505091860191860161525c565b5098975050505050505050565b801515811461106e57600080fd5b60008060008060006080868803121561536557600080fd5b85356001600160401b038082111561537c57600080fd5b9087019060e0828a03121561539057600080fd5b909550602087013590808211156153a657600080fd5b506153b388828901614a97565b9095509350506040860135915060608601356153ce8161533f565b809150509295509295909350565b600080604083850312156153ef57600080fd5b82356153fa81614b1c565b9150602083013561540a81614b1c565b809150509250929050565b60006040828403121561542757600080fd5b61542f614efc565b905081356001600160401b038082111561544857600080fd5b818401915084601f83011261545c57600080fd5b813560208282111561547057615470614ebe565b615482601f8301601f19168201614f40565b9250818352868183860101111561549857600080fd5b8181850182850137600081838501015282855280860135818601525050505092915050565b600080600080600060a086880312156154d557600080fd5b85356154e081614b1c565b945060208601356154f081614b1c565b935060408601356001600160401b038082111561550c57600080fd5b61551889838a01615415565b9450606088013591508082111561552e57600080fd5b5061553b88828901615415565b95989497509295608001359392505050565b6000806040838503121561556057600080fd5b823561556b81614b1c565b915060208301356001600160401b0381111561558657600080fd5b61559285828601614fb0565b9150509250929050565b600081518084526020808501945080840160005b838110156155cc578151875295820195908201906001016155b0565b509495945050505050565b602081526000614ca9602083018461559c565b600080602083850312156155fd57600080fd5b82356001600160401b0381111561561357600080fd5b614b1085828601614bf8565b6000806040838503121561563257600080fd5b823561563d81614b1c565b946020939093013593505050565b6000806000806080858703121561566157600080fd5b843561566c81614b1c565b935060208501359250604085013561568381614b1c565b9396929550929360600135925050565b600081518084526020808501945080840160005b838110156155cc5781516001600160a01b0316875295820195908201906001016156a7565b6040815260006156df6040830185615693565b82810360208401526112a0818561559c565b60008060006060848603121561570657600080fd5b833561571181614b1c565b925060208401356001600160401b0381111561572c57600080fd5b61573886828701615415565b925050604084013590509250925092565b60006060828403121561575b57600080fd5b614ca98383614be0565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156157a5576157a561577b565b5060010190565b60208082526019908201527f5061757361626c653a20696e6465782069732070617573656400000000000000604082015260600190565b60008235605e198336030181126157f957600080fd5b9190910192915050565b6000808335601e1984360301811261581a57600080fd5b8301803591506001600160401b0382111561583457600080fd5b6020019150600581901b36038213156147af57600080fd5b60608101823561585b81614b1c565b6001600160a01b03908116835260208401359061587782614b1c565b166020830152604083013561588b81614f70565b63ffffffff811660408401525092915050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6000602082840312156158df57600080fd5b8151614ca981614b1c565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b60208082526037908201527f44656c65676174696f6e4d616e616765723a206f6e6c7953747261746567794d60408201527f616e616765724f72456967656e506f644d616e61676572000000000000000000606082015260800190565b6000602082840312156159a357600080fd5b8151614ca98161533f565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b6000823560de198336030181126157f957600080fd5b600060208284031215615a1e57600080fd5b8135614ca98161533f565b600060018060a01b03808351168452806020840151166020850152806040840151166040850152506060820151606084015263ffffffff608083015116608084015260a082015160e060a0850152615a8460e0850182615693565b905060c083015184820360c08601526112a0828261559c565b602081526000614ca96020830184615a29565b602081526000825160e06020840152615acd610100840182615693565b90506020840151601f19848303016040850152615aea828261559c565b915050604084015160018060a01b03808216606086015260608601519150808251166080860152506bffffffffffffffffffffffff60208201511660a0850152506080840151615b4260c085018263ffffffff169052565b5060a08401516001600160a01b03811660e0850152610a3b565b60008060408385031215615b6f57600080fd5b8251615b7a8161533f565b6020939093015192949293505050565b82815260406020820152600061516f6040830184615a29565b600060208284031215615bb557600080fd5b5051919050565b600082601f830112615bcd57600080fd5b81516020615bdd614fd183614f8d565b82815260059290921b84018101918181019086841115615bfc57600080fd5b8286015b848110156150195780518352918301918301615c00565b60008060408385031215615c2a57600080fd5b82516001600160401b0380821115615c4157600080fd5b818501915085601f830112615c5557600080fd5b81516020615c65614fd183614f8d565b82815260059290921b84018101918181019089841115615c8457600080fd5b948201945b83861015615cab578551615c9c81614b1c565b82529482019490820190615c89565b91880151919650909350505080821115615cc457600080fd5b5061559285828601615bbc565b60008219821115615ce457615ce461577b565b500190565b600082821015615cfb57615cfb61577b565b500390565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215615d3657600080fd5b8135614ca981614f70565b80546001600160a01b0319166001600160a01b0392909216919091179055565b8135615d6c81614b1c565b615d768183615d41565b50600181016020830135615d8981614b1c565b615d938183615d41565b506040830135615da281614f70565b815463ffffffff60a01b191660a09190911b63ffffffff60a01b161790555050565b6000615dd0368361507f565b92915050565b6020808252606e90820152600080516020615efc83398151915260408201527f645769746864726177616c3a207769746864726177616c44656c6179426c6f6360608201527f6b7320706572696f6420686173206e6f74207965742070617373656420666f7260808201526d207468697320737472617465677960901b60a082015260c00190565b82815260006020604081840152835180604085015260005b81811015615e9257858101830151858201606001528201615e76565b81811115615ea4576000606083870101525b50601f01601f191692909201606001949350505050565b600060208284031215615ecd57600080fd5b81516001600160e01b031981168114614ca957600080fd5b634e487b7160e01b600052602160045260246000fdfe44656c65676174696f6e4d616e616765722e5f636f6d706c6574655175657565a2646970667358221220ffb5e101f50fc5f699cdea78c0c203cfab0ab248c3fc5db98d12b11d1eb9d13464736f6c634300080c0033",
    "sourceMap": "1137:48922:102:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46156:472;;;;;;:::i;:::-;;:::i;:::-;;;1015:25:229;;;1003:2;988:18;46156:472:102;;;;;;;;1131:182:103;;1194:119;1131:182;;49126:630:102;;;;;;:::i;:::-;;:::i;13861:1400::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4814:756::-;;;;;;:::i;:::-;;:::i;:::-;;5826:138:134;;;;;;:::i;:::-;;:::i;22046:571:102:-;;;;;;:::i;:::-;;:::i;3832:392:134:-;;;;;;:::i;:::-;;:::i;23463:243:102:-;;;;;;:::i;:::-;;:::i;43221:159::-;;;;;;:::i;:::-;-1:-1:-1;;;;;43322:26:102;43296:7;43322:26;;;:16;:26;;;;;:51;;;-1:-1:-1;;;43322:51:102;;;;;43221:159;47132:408;;;;;;:::i;:::-;;:::i;649:130:103:-;;699:80;649:130;;3318:607:102;;;;;;:::i;:::-;;:::i;21018:486::-;;;;;;:::i;:::-;;:::i;3363:46:103:-;;;;;;:::i;:::-;;;;;;;;;;;;;;17790:471:102;;;;;;:::i;:::-;;:::i;1703:49:103:-;;;;;;;;-1:-1:-1;;;;;9841:32:229;;;9823:51;;9811:2;9796:18;1703:49:103;9651:229:229;42984:147:102;;;;;;:::i;:::-;-1:-1:-1;;;;;43079:26:102;;;43053:7;43079:26;;;:16;:26;;;;;:45;;;;;42984:147;42038:123;;;;;;:::i;:::-;;:::i;:::-;;;10367:14:229;;10360:22;10342:41;;10330:2;10315:18;42038:123:102;10202:187:229;878:152:103;;939:91;878:152;;1911:49;;;;;1885:74:102;;1944:15;1885:74;;4299:136:134;;;:::i;46694:150:102:-;;;;;;:::i;:::-;;:::i;5606:149:134:-;;;;;;:::i;:::-;5724:7;;5695:1;:10;;;;;;;;5724:14;;;5723:24;;5606:149;5418:87;5491:7;;5418:87;;18498:1978:102;;;;;;:::i;:::-;;:::i;42749:143::-;;;;;;:::i;:::-;-1:-1:-1;;;;;42842:26:102;;;42816:7;42842:26;;;:16;:26;;;;;:43;;;42749:143;16703:353;;;;;;:::i;:::-;;:::i;22825:167::-;;;;;;:::i;:::-;;:::i;3159:46:103:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3159:46:103;;;42268:148:102;;;;;;:::i;:::-;;:::i;2071:101:39:-;;;:::i;2612:71:103:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;9685:1244:102;;;;;;:::i;:::-;;:::i;1825:37:134:-;;;;;-1:-1:-1;;;;;1825:37:134;;;1441:85:39;1513:6;;-1:-1:-1;;;;;1513:6:39;1441:85;;43470:368:102;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2027:104::-;;2088:42;2027:104;;6467:262;;;;;;:::i;:::-;;:::i;4904:62:103:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1811:33;;;;;4607:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3852:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4451:39;;;;;;5466:66;;;;;;:::i;:::-;;;;;;;;;;;;;;42519:140:102;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42626:26:102;;;;;:16;:26;;;;;42619:33;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;42619:33:102;;;;;;;;;;42519:140;;;;;24988:13:229;;-1:-1:-1;;;;;24984:22:229;;;24966:41;;25067:4;25055:17;;;25049:24;25045:33;;;25023:20;;;25016:63;25127:17;;;25121:24;25147:10;25117:41;25095:20;;;25088:71;24916:2;24901:18;42519:140:102;24714:451:229;47970:560:102;;;;;;:::i;:::-;;:::i;2051:60:103:-;;2105:6;2051:60;;44063:1765:102;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;11254:2250::-;;;;;;:::i;:::-;;:::i;7732:352::-;;;;;;:::i;:::-;;:::i;5982:265::-;;;;;;:::i;:::-;;:::i;2321:198:39:-;;;;;;:::i;:::-;;:::i;41699:227:102:-;;;:::i;4911:437:134:-;;;;;;:::i;:::-;;:::i;46156:472:102:-;46283:24;;46238:7;;;46317:273;46337:21;;;46317:273;;;46379:27;46409:29;:44;46439:10;;46450:1;46439:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;46409:44:102;-1:-1:-1;;;;;46409:44:102;;;;;;;;;;;;;46379:74;;46493:15;46471:19;:37;46467:113;;;46546:19;46528:37;;46467:113;-1:-1:-1;46360:3:102;;;:::i;:::-;;;46317:273;;;-1:-1:-1;46606:15:102;46156:472;-1:-1:-1;;;46156:472:102:o;49126:630::-;49449:101;;;1194:119:103;49449:101:102;;;;28206:25:229;;;;-1:-1:-1;;;;;28305:15:229;;;28285:18;;;28278:43;28357:15;;;28337:18;;;28330:43;28409:15;;28389:18;;;28382:43;28441:19;;;28434:35;;;28485:19;;;;28478:35;;;49449:101:102;;;;;;;;;;28178:19:229;;;;49449:101:102;;;49426:134;;;;;-1:-1:-1;;;49675:17:102;:15;:17::i;:::-;49646:67;;-1:-1:-1;;;49646:67:102;;;28782:27:229;28825:11;;;28818:27;;;;28861:12;;;28854:28;;;28898:12;;49646:67:102;;;;;;-1:-1:-1;;49646:67:102;;;;;;49636:78;;49646:67;49636:78;;;;;49126:630;-1:-1:-1;;;;;;;;49126:630:102:o;13861:1400::-;5724:7:134;;14026:16:102;;1520:1;;5695:10:134;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:134;;;;;;;:::i;:::-;;;;;;;;;14054:32:102::1;14103:22:::0;-1:-1:-1;;;;;14089:44:102;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;14089:44:102::1;-1:-1:-1::0;14174:10:102::1;14143:16;14162:23:::0;;;:11:::1;:23;::::0;;;;;14054:79;;-1:-1:-1;;;;;;14162:23:102;;::::1;::::0;14196:1027:::1;14216:33:::0;;::::1;14196:1027;;;14325:22;;14348:1;14325:25;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:32;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;:39;;14278:22;;14301:1;14278:25;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:36;::::0;;::::1;:::i;:::-;:43;;:86;14270:155;;;::::0;-1:-1:-1;;;14270:155:102;;30941:2:229;14270:155:102::1;::::0;::::1;30923:21:229::0;30980:2;30960:18;;;30953:30;31019:34;30999:18;;;30992:62;31090:26;31070:18;;;31063:54;31134:19;;14270:155:102::1;30739:420:229::0;14270:155:102::1;14487:10;14447:22:::0;;14470:1;14447:25;;::::1;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:36;::::0;;;;;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;14447:50:102::1;;14439:123;;;::::0;-1:-1:-1;;;14439:123:102;;31366:2:229;14439:123:102::1;::::0;::::1;31348:21:229::0;31405:2;31385:18;;;31378:30;31444:34;31424:18;;;31417:62;31515:30;31495:18;;;31488:58;31563:19;;14439:123:102::1;31164:424:229::0;14439:123:102::1;14903:309;14961:10;14999:8;15037:22;;15060:1;15037:25;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:36;::::0;;;;;::::1;;;:::i;:::-;15103:22;;15126:1;15103:25;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:36;::::0;;::::1;:::i;:::-;14903:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;15165:22:102;;-1:-1:-1;15165:22:102;;-1:-1:-1;15188:1:102;;-1:-1:-1;15165:25:102;;::::1;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:32;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;14903:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;14903:31:102::1;::::0;-1:-1:-1;;;14903:309:102:i:1;:::-;14882:15;14898:1;14882:18;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:330;14251:3;::::1;::::0;::::1;:::i;:::-;;;;14196:1027;;;-1:-1:-1::0;15239:15:102;;13861:1400;-1:-1:-1;;;;;13861:1400:102:o;4814:756::-;5003:10;5043:1;4986:28;;;:16;:28;;;;;:45;-1:-1:-1;;;;;4986:45:102;:59;4965:175;;;;-1:-1:-1;;;4965:175:102;;31795:2:229;4965:175:102;;;31777:21:229;31834:2;31814:18;;;31807:30;31873:34;31853:18;;;31846:62;31944:34;31924:18;;;31917:62;-1:-1:-1;;;31995:19:229;;;31988:36;32041:19;;4965:175:102;31593:473:229;4965:175:102;5150:59;5170:10;5182:26;5150:19;:59::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;5331:70:102;5341:10;;5365:23;5398:1;5331:9;:70::i;:::-;5458:10;-1:-1:-1;;;;;5439:58:102;;5470:26;5439:58;;;;;;:::i;:::-;;;;;;;;5539:10;-1:-1:-1;;;;;5512:51:102;;5551:11;;5512:51;;;;;;;:::i;:::-;;;;;;;;4955:615;4814:756;;;:::o;5826:138:134:-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:134;-1:-1:-1;;;;;2285:23:134;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:134;:10;-1:-1:-1;;;;;2271:39:134;;2263:94;;;;-1:-1:-1;;;2263:94:134;;;;;;;:::i;:::-;5920:37:::1;5939:17;5920:18;:37::i;:::-;5826:138:::0;:::o;22046:571:102:-;2353:10;-1:-1:-1;;;;;2375:15:102;2353:38;;;:80;;-1:-1:-1;2395:10:102;-1:-1:-1;;;;;2417:15:102;2395:38;;2353:80;2332:182;;;;-1:-1:-1;;;2332:182:102;;;;;;;:::i;:::-;22274:19:::1;22286:6;22274:11;:19::i;:::-;22270:341;;;-1:-1:-1::0;;;;;22328:19:102;;::::1;22309:16;22328:19:::0;;;:11:::1;:19;::::0;;;;;::::1;22425:175;22328:19:::0;22340:6;22545:8;22579:6;22425:23:::1;:175::i;:::-;22295:316;22270:341;22046:571:::0;;;:::o;3832:392:134:-;2125:14;;:35;;-1:-1:-1;;;2125:35:134;;2149:10;2125:35;;;9823:51:229;-1:-1:-1;;;;;2125:14:134;;;;:23;;9796:18:229;;2125:35:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:134;;;;;;;:::i;:::-;4064:7:::1;::::0;4034:25;;::::1;4033:38;4025:107;;;::::0;-1:-1:-1;;;4025:107:134;;35109:2:229;4025:107:134::1;::::0;::::1;35091:21:229::0;35148:2;35128:18;;;35121:30;35187:34;35167:18;;;35160:62;35258:26;35238:18;;;35231:54;35302:19;;4025:107:134::1;34907:420:229::0;4025:107:134::1;4142:7;:25:::0;;;4182:35:::1;::::0;1015:25:229;;;4189:10:134::1;::::0;4182:35:::1;::::0;1003:2:229;988:18;4182:35:134::1;;;;;;;;3832:392:::0;:::o;23463:243:102:-;1334:13:39;:11;:13::i;:::-;23631:68:102::1;23665:10;;23677:21;;23631:33;:68::i;47132:408::-:0;-1:-1:-1;;;;;47379:19:102;;47287:7;47379:19;;;:11;:19;;;;;;47452:81;47391:6;47379:19;47516:8;47526:6;47452:35;:81::i;:::-;47445:88;47132:408;-1:-1:-1;;;;;47132:408:102:o;3318:607::-;3111:19:40;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:40;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:40;1476:19:42;:23;;;3219:66:40;;-1:-1:-1;3268:12:40;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:40;;35534:2:229;3157:201:40;;;35516:21:229;35573:2;35553:18;;;35546:30;35612:34;35592:18;;;35585:62;-1:-1:-1;;;35663:18:229;;;35656:44;35717:19;;3157:201:40;35332:410:229;3157:201:40;3368:12;:16;;-1:-1:-1;;3368:16:40;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:40;;;;;3394:65;3619:55:102::1;3637:15;3654:19;3619:17;:55::i;:::-;3704:27;:25;:27::i;:::-;3684:17;:47:::0;3741:32:::1;3760:12:::0;3741:18:::1;:32::i;:::-;3783:55;3812:25;3783:28;:55::i;:::-;3848:70;3882:11;;3895:22;;3848:33;:70::i;:::-;3483:14:40::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:40;;;3553:14;;-1:-1:-1;35899:36:229;;3553:14:40;;35887:2:229;35872:18;3553:14:40;;;;;;;3479:99;3101:483;3318:607:102;;;;;;;;:::o;21018:486::-;2353:10;-1:-1:-1;;;;;2375:15:102;2353:38;;;:80;;-1:-1:-1;2395:10:102;-1:-1:-1;;;;;2417:15:102;2395:38;;2353:80;2332:182;;;;-1:-1:-1;;;2332:182:102;;;;;;;:::i;:::-;21246:19:::1;21258:6;21246:11;:19::i;:::-;21242:256;;;-1:-1:-1::0;;;;;21300:19:102;;::::1;21281:16;21300:19:::0;;;:11:::1;:19;::::0;;;;;::::1;21390:97;21300:19:::0;21312:6;21461:8;21479:6;21390:23:::1;:97::i;17790:471::-:0;5724:7:134;;1664:1:102;;5695:10:134;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:134;;;;;;;:::i;:::-;1815:1:41::1;2569:7;;:19;;2561:63;;;::::0;-1:-1:-1;;;2561:63:41;;36148:2:229;2561:63:41::1;::::0;::::1;36130:21:229::0;36187:2;36167:18;;;36160:30;36226:33;36206:18;;;36199:61;36277:18;;2561:63:41::1;35946:355:229::0;2561:63:41::1;1815:1;2699:7;:18:::0;18087:9:102::2;18082:173;18102:22:::0;;::::2;18082:173;;;18145:99;18171:11;;18183:1;18171:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;18187:6;;18194:1;18187:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;18198:22;;18221:1;18198:25;;;;;;;:::i;:::-;;;;;;;18225:15;;18241:1;18225:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;18145:25;:99::i;:::-;18126:3;::::0;::::2;:::i;:::-;;;18082:173;;;-1:-1:-1::0;;1772:1:41::1;2872:7;:22:::0;-1:-1:-1;;;;;;;;17790:471:102:o;42038:123::-;-1:-1:-1;;;;;42120:19:102;;;42096:4;42120:19;;;:11;:19;;;;;;;:33;;;42038:123::o;4299:136:134:-;2125:14;;:35;;-1:-1:-1;;;2125:35:134;;2149:10;2125:35;;;9823:51:229;-1:-1:-1;;;;;2125:14:134;;;;:23;;9796:18:229;;2125:35:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:88;;;;-1:-1:-1;;;2117:88:134;;;;;;;:::i;:::-;-1:-1:-1;;4349:7:134::1;:27:::0;;;4391:37:::1;::::0;1015:25:229;;;4398:10:134::1;::::0;4391:37:::1;::::0;1003:2:229;988:18;4391:37:134::1;;;;;;;4299:136::o:0;46694:150:102:-;46778:7;46825:10;46814:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;46804:33;;;;;;46797:40;;46694:150;;;:::o;18498:1978::-;18637:9;18633:1828;18656:20;:27;18652:1;:31;18633:1828;;;18700:77;18780:20;18801:1;18780:23;;;;;;;;:::i;:::-;;;;;;;18700:103;;18876:14;18892:25;18921:15;-1:-1:-1;;;;;18921:39:102;;18961:19;18921:60;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18875:106;;;;19061:9;19057:1335;;;19107:26;;;;;-1:-1:-1;;;;;19236:35:102;;19090:14;19236:35;;;:27;:35;;;;;;;19107:26;;19236:35;;;19289:37;19236:35;19289:37;:::i;:::-;;;;;;19345:36;19384:448;;;;;;;;19425:6;-1:-1:-1;;;;;19384:448:102;;;;;19466:19;:36;;;-1:-1:-1;;;;;19384:448:102;;;;;19536:19;:38;;;:49;;;-1:-1:-1;;;;;19384:448:102;;;;;19614:5;19384:448;;;;19653:19;:40;;;19384:448;;;;;;19727:19;:30;;;19384:448;;;;19787:19;:26;;;19384:448;;;19345:487;;19893:15;19911:43;19935:18;19911:23;:43::i;:::-;20085:27;;;;:18;:27;;;;;;19893:61;;-1:-1:-1;20085:27:102;;20084:28;20076:110;;;;-1:-1:-1;;;20076:110:102;;40258:2:229;20076:110:102;;;40240:21:229;40297:2;40277:18;;;40270:30;40336:34;40316:18;;;40309:62;40407:34;40387:18;;;40380:62;-1:-1:-1;;;40458:19:229;;;40451:36;40504:19;;20076:110:102;40056:473:229;20076:110:102;20204:27;;;;:18;:27;;;;;;;:34;;-1:-1:-1;;20204:34:102;20234:4;20204:34;;;20262:45;;;;;20223:7;;20288:18;;20262:45;:::i;:::-;;;;;;;;20331:46;;;41053:25:229;;;41109:2;41094:18;;41087:34;;;20331:46:102;;41026:18:229;20331:46:102;;;;;;;19072:1320;;;;19057:1335;20433:3;;;;;18686:1775;;;18633:1828;;;;18498:1978;:::o;16703:353::-;5724:7:134;;1664:1:102;;5695:10:134;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:134;;;;;;;:::i;:::-;1815:1:41::1;2569:7;;:19;;2561:63;;;::::0;-1:-1:-1;;;2561:63:41;;36148:2:229;2561:63:41::1;::::0;::::1;36130:21:229::0;36187:2;36167:18;;;36160:30;36226:33;36206:18;;;36199:61;36277:18;;2561:63:41::1;35946:355:229::0;2561:63:41::1;1815:1;2699:7;:18:::0;16965:84:102::2;16991:10:::0;17003:6;;17011:20;17033:15;16965:25:::2;:84::i;:::-;-1:-1:-1::0;;1772:1:41::1;2872:7;:22:::0;-1:-1:-1;;;;16703:353:102:o;22825:167::-;1334:13:39;:11;:13::i;:::-;22928:57:102::1;22957:27;22928:28;:57::i;42268:148::-:0;-1:-1:-1;;;;;42351:26:102;;;42327:4;42351:26;;;:16;:26;;;;;:43;;:57;;;42268:148::o;2071:101:39:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;9685:1244:102:-;10039:15;10004:24;:31;;;:50;;9983:162;;;;-1:-1:-1;;;9983:162:102;;41334:2:229;9983:162:102;;;41316:21:229;41373:2;41353:18;;;41346:30;41412:34;41392:18;;;41385:62;41483:34;41463:18;;;41456:62;-1:-1:-1;;;41534:19:229;;;41527:32;41576:19;;9983:162:102;41132:469:229;9983:162:102;10226:26;10255:11;:19;10267:6;-1:-1:-1;;;;;10255:19:102;-1:-1:-1;;;;;10255:19:102;;;;;;;;;;;;;10226:48;;10284:24;10311:164;10360:6;10380:18;10412:8;10434:24;:31;;;10311:35;:164::i;:::-;-1:-1:-1;;;;;10509:19:102;;;;;;:11;:19;;;;;10552:1;10531:22;;10509:44;;10699:34;;10284:191;;-1:-1:-1;10628:106:102;;10521:6;;10284:191;;10628:44;:106::i;:::-;10853:69;10863:6;10871:8;10881:26;10909:12;10853:9;:69::i;:::-;9935:994;;9685:1244;;;;;:::o;43470:368::-;43589:16;43617:23;43657:10;:17;-1:-1:-1;;;;;43643:32:102;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43643:32:102;;43617:58;;43690:9;43685:124;43709:10;:17;43705:1;:21;43685:124;;;-1:-1:-1;;;;;43759:24:102;;;;;;:14;:24;;;;;43784:13;;43759:24;;;43784:10;;43795:1;;43784:13;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;43759:39:102;-1:-1:-1;;;;;43759:39:102;;;;;;;;;;;;;43747:6;43754:1;43747:9;;;;;;;;:::i;:::-;;;;;;;;;;:51;43728:3;;;:::i;:::-;;;43685:124;;6467:262;6558:22;6569:10;6558;:22::i;:::-;6550:106;;;;-1:-1:-1;;;6550:106:102;;41808:2:229;6550:106:102;;;41790:21:229;41847:2;41827:18;;;41820:30;41886:34;41866:18;;;41859:62;41957:34;41937:18;;;41930:62;-1:-1:-1;;;42008:19:229;;;42001:38;42056:19;;6550:106:102;41606:475:229;6550:106:102;6698:10;-1:-1:-1;;;;;6671:51:102;;6710:11;;6671:51;;;;;;;:::i;:::-;;;;;;;;6467:262;;:::o;47970:560::-;48252:78;;;939:91:103;48252:78:102;;;;42345:25:229;;;;-1:-1:-1;;;;;42444:15:229;;;42424:18;;;42417:43;42496:15;;42476:18;;;42469:43;42528:18;;;42521:34;;;42571:19;;;;42564:35;;;48252:78:102;;;;;;;;;;42317:19:229;;;;48252:78:102;;;48229:111;;;;;-1:-1:-1;;;48453:17:102;:15;:17::i;:::-;48424:65;;-1:-1:-1;;;48424:65:102;;;28782:27:229;28825:11;;;28818:27;;;;28861:12;;;28854:28;;;28898:12;;48424:65:102;;;;;;-1:-1:-1;;48424:65:102;;;;;;48414:76;;48424:65;48414:76;;;;;47970:560;-1:-1:-1;;;;;;;47970:560:102:o;44063:1765::-;44264:38;;-1:-1:-1;;;44264:38:102;;-1:-1:-1;;;;;9841:32:229;;;44264:38:102;;;9823:51:229;44130:18:102;;;;-1:-1:-1;;44264:15:102;:30;;;;;;9796:18:229;;44264:38:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;44410:35;;-1:-1:-1;;;44410:35:102;;-1:-1:-1;;;;;9841:32:229;;;44410:35:102;;;9823:51:229;44245:57:102;;-1:-1:-1;;;;;44410:15:102;:27;;;;;;9796:18:229;;44410:35:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;44410:35:102;;;;;;;;;;;;:::i;:::-;44312:133;;;;44558:1;44545:9;:14;44541:98;;44583:21;;44606;;-1:-1:-1;44063:1765:102;-1:-1:-1;;;44063:1765:102:o;44541:98::-;44649:29;44688:23;44726:21;:28;44758:1;44726:33;44722:1062;;;44861:18;;;44877:1;44861:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;;44902:16:102;;;44916:1;44902:16;;;;;;;;;44848:31;;-1:-1:-1;44916:1:102;-1:-1:-1;44902:16:102;;;;;;;;;;;-1:-1:-1;44902:16:102;44893:25;;2088:42;44932:10;44943:1;44932:13;;;;;;;;:::i;:::-;;;;;;:38;-1:-1:-1;;;;;44932:38:102;;;-1:-1:-1;;;;;44932:38:102;;;;;45004:9;44984:6;44991:1;44984:9;;;;;;;;:::i;:::-;;;;;;:30;;;;;44722:1062;;;45162:28;;:32;;45193:1;45162:32;:::i;:::-;-1:-1:-1;;;;;45146:49:102;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;45146:49:102;;45133:62;;45232:10;:17;-1:-1:-1;;;;;45218:32:102;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;45218:32:102;;45209:41;;45353:9;45348:219;45372:21;:28;45368:1;:32;45348:219;;;45438:21;45460:1;45438:24;;;;;;;;:::i;:::-;;;;;;;45422:10;45433:1;45422:13;;;;;;;;:::i;:::-;;;;;;:40;-1:-1:-1;;;;;45422:40:102;;;-1:-1:-1;;;;;45422:40:102;;;;;45492:21;45514:1;45492:24;;;;;;;;:::i;:::-;;;;;;;45480:6;45487:1;45480:9;;;;;;;;:::i;:::-;;;;;;;;;;:36;45547:3;;45348:219;;;;2088:42;45651:10;45682:1;45662:10;:17;:21;;;;:::i;:::-;45651:33;;;;;;;;:::i;:::-;;;;;;:58;-1:-1:-1;;;;;45651:58:102;;;-1:-1:-1;;;;;45651:58:102;;;;;45763:9;45723:6;45750:1;45730:10;:17;:21;;;;:::i;:::-;45723:29;;;;;;;;:::i;:::-;;;;;;:50;;;;;44722:1062;45802:10;;45814:6;;-1:-1:-1;44063:1765:102;-1:-1:-1;;;;;44063:1765:102:o;11254:2250::-;5724:7:134;;11357:32:102;;1520:1;;5695:10:134;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:134;;;;;;;:::i;:::-;11409:19:102::1;11421:6;11409:11;:19::i;:::-;11401:100;;;::::0;-1:-1:-1;;;11401:100:102;;45182:2:229;11401:100:102::1;::::0;::::1;45164:21:229::0;45221:2;45201:18;;;45194:30;;;45260:34;45240:18;;;45233:62;45331:34;45311:18;;;45304:62;-1:-1:-1;;;45382:19:229;;;45375:35;45427:19;;11401:100:102::1;44980:472:229::0;11401:100:102::1;11520:18;11531:6;11520:10;:18::i;:::-;11519:19;11511:93;;;::::0;-1:-1:-1;;;11511:93:102;;45659:2:229;11511:93:102::1;::::0;::::1;45641:21:229::0;45698:2;45678:18;;;45671:30;45737:34;45717:18;;;45710:62;45808:31;45788:18;;;45781:59;45857:19;;11511:93:102::1;45457:425:229::0;11511:93:102::1;-1:-1:-1::0;;;;;11622:20:102;::::1;11614:93;;;::::0;-1:-1:-1;;;11614:93:102;;46089:2:229;11614:93:102::1;::::0;::::1;46071:21:229::0;46128:2;46108:18;;;46101:30;46167:34;46147:18;;;46140:62;46238:30;46218:18;;;46211:58;46286:19;;11614:93:102::1;45887:424:229::0;11614:93:102::1;-1:-1:-1::0;;;;;11736:19:102;;::::1;11717:16;11736:19:::0;;;:11:::1;:19;::::0;;;;;;;::::1;::::0;11786:10:::1;:20;::::0;:62:::1;;-1:-1:-1::0;11826:10:102::1;-1:-1:-1::0;;;;;11826:22:102;::::1;;11786:62;:141;;;-1:-1:-1::0;;;;;;11882:26:102;;::::1;;::::0;;;:16:::1;:26;::::0;;;;:45:::1;;::::0;::::1;11868:10;:59;11786:141;11765:249;;;::::0;-1:-1:-1;;;11765:249:102;;46518:2:229;11765:249:102::1;::::0;::::1;46500:21:229::0;46557:2;46537:18;;;46530:30;46596:34;46576:18;;;46569:62;46667:31;46647:18;;;46640:59;46716:19;;11765:249:102::1;46316:425:229::0;11765:249:102::1;12192:29;12223:23:::0;12250:28:::1;12271:6;12250:20;:28::i;:::-;12191:87:::0;;-1:-1:-1;12191:87:102;-1:-1:-1;12376:10:102::1;-1:-1:-1::0;;;;;12376:20:102;::::1;;12372:96;;12448:8;-1:-1:-1::0;;;;;12417:40:102::1;12440:6;-1:-1:-1::0;;;;;12417:40:102::1;;;;;;;;;;;12372:96;12542:8;-1:-1:-1::0;;;;;12516:35:102::1;12534:6;-1:-1:-1::0;;;;;12516:35:102::1;;;;;;;;;;;-1:-1:-1::0;;;;;12561:19:102;::::1;12591:1;12561:19:::0;;;:11:::1;:19;::::0;;;;:32;;-1:-1:-1;;;;;;12561:32:102::1;::::0;;12697:17;;12693:772:::1;;12753:16;::::0;;12767:1:::1;12753:16:::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;12693:772:102::1;;;12832:10;:17;-1:-1:-1::0;;;;;12818:32:102::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;12818:32:102::1;;12800:50;;12869:9;12864:591;12888:10;:17;12884:1;:21;12864:591;;;12966:18;::::0;;12982:1:::1;12966:18:::0;;;;;::::1;::::0;;;12930:33:::1;::::0;12966:18:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;13033:16:102::1;::::0;;13047:1:::1;13033:16:::0;;;;;::::1;::::0;;;12930:54;;-1:-1:-1;13002:28:102::1;::::0;13033:16;-1:-1:-1;13033:16:102::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;13033:16:102::1;13002:47;;13087:10;13098:1;13087:13;;;;;;;;:::i;:::-;;;;;;;13067:14;13082:1;13067:17;;;;;;;;:::i;:::-;;;;;;:33;-1:-1:-1::0;;;;;13067:33:102::1;;;-1:-1:-1::0;;;;;13067:33:102::1;;;::::0;::::1;13135:6;13142:1;13135:9;;;;;;;;:::i;:::-;;;;;;;13118:11;13130:1;13118:14;;;;;;;;:::i;:::-;;;;;;:26;;;::::0;::::1;13184:256;13246:6;13284:8;13326:6;13366:14;13410:11;13184:31;:256::i;:::-;13163:15;13179:1;13163:18;;;;;;;;:::i;:::-;;;;;;:277;;;::::0;::::1;12912:543;;12907:3;;;;;:::i;:::-;;;;12864:591;;;;12693:772;13475:22;;;11254:2250:::0;;;;:::o;7732:352::-;8004:73;8014:10;8026:8;8036:26;8064:12;8004:9;:73::i;5982:265::-;6085:22;6096:10;6085;:22::i;:::-;6077:102;;;;-1:-1:-1;;;6077:102:102;;46948:2:229;6077:102:102;;;46930:21:229;46987:2;46967:18;;;46960:30;47026:34;47006:18;;;46999:62;47097:34;47077:18;;;47070:62;-1:-1:-1;;;47148:19:229;;;47141:34;47192:19;;6077:102:102;46746:471:229;6077:102:102;6189:51;6209:10;6221:18;6189:19;:51::i;2321:198:39:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:39;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:39;;47424:2:229;2401:73:39::1;::::0;::::1;47406:21:229::0;47463:2;47443:18;;;47436:30;47502:34;47482:18;;;47475:62;-1:-1:-1;;;47553:18:229;;;47546:36;47599:19;;2401:73:39::1;47222:402:229::0;2401:73:39::1;2484:28;2503:8;2484:18;:28::i;41699:227:102:-:0;41747:7;41787:17;41770:13;:34;41766:154;;;-1:-1:-1;41827:17:102;;;41699:227::o;41766:154::-;41882:27;:25;:27::i;:::-;41875:34;;41699:227;:::o;4911:437:134:-;2285:14;;;;;;;;;-1:-1:-1;;;;;2285:14:134;-1:-1:-1;;;;;2285:23:134;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2271:39:134;:10;-1:-1:-1;;;;;2271:39:134;;2263:94;;;;-1:-1:-1;;;2263:94:134;;;;;;;:::i;:::-;5164:7:::1;;5163:8;5141:15;5140:16;5128:7;;5127:8;5126:31;5125:47;5104:150;;;::::0;-1:-1:-1;;;5104:150:134;;47831:2:229;5104:150:134::1;::::0;::::1;47813:21:229::0;47870:2;47850:18;;;47843:30;47909:34;47889:18;;;47882:62;47980:26;47960:18;;;47953:54;48024:19;;5104:150:134::1;47629:420:229::0;5104:150:134::1;5264:7;:25:::0;;;5304:37:::1;::::0;1015:25:229;;;5313:10:134::1;::::0;5304:37:::1;::::0;1003:2:229;988:18;5304:37:134::1;869:177:229::0;35419:2938:102;35636:7;-1:-1:-1;;;;;35663:20:102;;35655:113;;;;-1:-1:-1;;;35655:113:102;;48256:2:229;35655:113:102;;;48238:21:229;48295:2;48275:18;;;48268:30;48334:34;48314:18;;;48307:62;48405:34;48385:18;;;48378:62;-1:-1:-1;;;48456:19:229;;;48449:47;48513:19;;35655:113:102;48054:484:229;35655:113:102;35786:17;;35778:112;;;;-1:-1:-1;;;35778:112:102;;48745:2:229;35778:112:102;;;48727:21:229;48784:2;48764:18;;;48757:30;48823:34;48803:18;;;48796:62;48894:34;48874:18;;;48867:62;-1:-1:-1;;;48945:19:229;;;48938:44;48999:19;;35778:112:102;48543:481:229;35778:112:102;36048:9;36043:1588;36067:10;:17;36063:1;:21;36043:1588;;;-1:-1:-1;;;;;36151:22:102;;;36147:264;;36193:203;36249:8;36287:6;36325:10;36336:1;36325:13;;;;;;;;:::i;:::-;;;;;;;36368:6;36375:1;36368:9;;;;;;;;:::i;:::-;;;;;;;36193:23;:203::i;:::-;2088:42;-1:-1:-1;;;;;36502:39:102;:10;36513:1;36502:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;36502:39:102;;36498:1091;;;37010:15;-1:-1:-1;;;;;37010:28:102;;37039:6;37047;37054:1;37047:9;;;;;;;;:::i;:::-;;;;;;;37010:47;;;;;;;;;;;;;;;-1:-1:-1;;;;;49221:32:229;;;;49203:51;;49285:2;49270:18;;49263:34;49191:2;49176:18;;49029:274;37010:47:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36498:1091;;;37135:10;-1:-1:-1;;;;;37125:20:102;:6;-1:-1:-1;;;;;37125:20:102;;:84;;;;37150:15;-1:-1:-1;;;;;37150:44:102;;37195:10;37206:1;37195:13;;;;;;;;:::i;:::-;;;;;;;37150:59;;;;;;;;;;;;;;-1:-1:-1;;;;;9841:32:229;;;;9823:51;;9811:2;9796:18;;9651:229;37150:59:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37149:60;37125:84;37096:287;;;;-1:-1:-1;;;37096:287:102;;49510:2:229;37096:287:102;;;49492:21:229;49549:3;49529:18;;;49522:31;;;49589:34;49569:18;;;49562:62;49660:34;49640:18;;;49633:62;49732:34;49711:19;;;49704:63;49804:34;49783:19;;;49776:63;-1:-1:-1;;;49855:19:229;;;49848:35;49900:19;;37096:287:102;49308:617:229;37096:287:102;37512:15;-1:-1:-1;;;;;37512:28:102;;37541:6;37549:10;37560:1;37549:13;;;;;;;;:::i;:::-;;;;;;;37564:6;37571:1;37564:9;;;;;;;;:::i;:::-;;;;;;;37512:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36498:1091;37615:3;;36043:1588;;;-1:-1:-1;;;;;;37718:35:102;;37702:13;37718:35;;;:27;:35;;;;;;;;;;;37763:37;37718:35;37763:37;:::i;:::-;;;;;;37811:28;37842:257;;;;;;;;37875:6;-1:-1:-1;;;;;37842:257:102;;;;;37908:8;-1:-1:-1;;;;;37842:257:102;;;;;37942:10;-1:-1:-1;;;;;37842:257:102;;;;;37973:5;37842:257;;;;38011:12;37842:257;;;;;;38050:10;37842:257;;;;38082:6;37842:257;;;37811:288;;38110:22;38135:35;38159:10;38135:23;:35::i;:::-;38218:34;;;;:18;:34;;;;;;;:41;;-1:-1:-1;;38218:41:102;38255:4;38218:41;;;38275:44;38110:60;;-1:-1:-1;38275:44:102;;;;38110:60;;38308:10;;38275:44;:::i;:::-;;;;;;;;38336:14;35419:2938;-1:-1:-1;;;;;;;;35419:2938:102:o;24299:907::-;24478:1;24431:35;;;;:18;:35;:::i;:::-;-1:-1:-1;;;;;24431:49:102;;;24410:180;;;;-1:-1:-1;;;24410:180:102;;50531:2:229;24410:180:102;;;50513:21:229;50570:2;50550:18;;;50543:30;50609:34;50589:18;;;50582:62;50680:34;50660:18;;;50653:62;-1:-1:-1;;;50731:19:229;;;50724:51;50792:19;;24410:180:102;50329:488:229;24410:180:102;1944:15;24621:43;;;;;;;;:::i;:::-;:79;;;;24600:234;;;;-1:-1:-1;;;24600:234:102;;51274:2:229;24600:234:102;;;51256:21:229;51313:3;51293:18;;;51286:31;51353:34;51333:18;;;51326:62;51424:34;51404:18;;;51397:62;51496:34;51475:19;;;51468:63;-1:-1:-1;;;51547:19:229;;;51540:43;51600:19;;24600:234:102;51072:553:229;24600:234:102;-1:-1:-1;;;;;24912:26:102;;;;;;:16;:26;;;;;;;:51;;;-1:-1:-1;;;24912:51:102;;;;;24865:43;;;;;;;;;:::i;:::-;:98;;;;24844:228;;;;-1:-1:-1;;;24844:228:102;;51832:2:229;24844:228:102;;;51814:21:229;51871:2;51851:18;;;51844:30;51910:34;51890:18;;;51883:62;51981:34;51961:18;;;51954:62;-1:-1:-1;;;52032:19:229;;;52025:50;52092:19;;24844:228:102;51630:487:229;24844:228:102;-1:-1:-1;;;;;25082:26:102;;;;;;:16;:26;;;;;25111:18;;25082:47;25111:18;25082:26;:47;:::i;:::-;-1:-1:-1;;25144:55:102;;25168:10;;25144:55;;;;25180:18;;25144:55;:::i;26036:2921::-;5724:7:134;;1383:1:102;;5695::134;5724:14;;;5723:24;2767:14;2759:52;;;;-1:-1:-1;;;2759:52:134;;;;;;;:::i;:::-;26273:19:102::1;26285:6;26273:11;:19::i;:::-;26272:20;26264:98;;;::::0;-1:-1:-1;;;26264:98:102;;53289:2:229;26264:98:102::1;::::0;::::1;53271:21:229::0;53328:2;53308:18;;;53301:30;53367:34;53347:18;;;53340:62;53438:34;53418:18;;;53411:62;-1:-1:-1;;;53489:19:229;;;53482:32;53531:19;;26264:98:102::1;53087:469:229::0;26264:98:102::1;26380:20;26391:8;26380:10;:20::i;:::-;26372:102;;;::::0;-1:-1:-1;;;26372:102:102;;53763:2:229;26372:102:102::1;::::0;::::1;53745:21:229::0;53802:2;53782:18;;;53775:30;53841:34;53821:18;;;53814:62;53912:34;53892:18;;;53885:62;-1:-1:-1;;;53963:19:229;;;53956:36;54009:19;;26372:102:102::1;53561:473:229::0;26372:102:102::1;-1:-1:-1::0;;;;;26640:26:102;;::::1;26610:27;26640:26:::0;;;:16:::1;:26;::::0;;;;:45:::1;;::::0;::::1;27102:33:::0;;;::::1;::::0;:70:::1;;-1:-1:-1::0;27139:10:102::1;-1:-1:-1::0;;;;;27139:33:102;::::1;;;27102:70;:96;;;;-1:-1:-1::0;27176:10:102::1;-1:-1:-1::0;;;;;27176:22:102;::::1;;;27102:96;27098:1267;;;27318:15;27281:26;:33;;;:52;;27256:166;;;::::0;-1:-1:-1;;;27256:166:102;;54241:2:229;27256:166:102::1;::::0;::::1;54223:21:229::0;54280:2;54260:18;;;54253:30;54319:34;54299:18;;;54292:62;54390:25;54370:18;;;54363:53;54433:19;;27256:166:102::1;54039:419:229::0;27256:166:102::1;-1:-1:-1::0;;;;;27554:50:102;::::1;;::::0;;;:29:::1;:50;::::0;;;;;;;:64;;;;;;;;;::::1;;27553:65;27528:179;;;::::0;-1:-1:-1;;;27528:179:102;;54665:2:229;27528:179:102::1;::::0;::::1;54647:21:229::0;54704:2;54684:18;;;54677:30;54743:34;54723:18;;;54716:62;54814:25;54794:18;;;54787:53;54857:19;;27528:179:102::1;54463:419:229::0;27528:179:102::1;-1:-1:-1::0;;;;;27721:50:102;::::1;;::::0;;;:29:::1;:50;::::0;;;;;;;:64;;;;;;;:71;;-1:-1:-1;;27721:71:102::1;27788:4;27721:71;::::0;;28049:33;::::1;::::0;27877:219:::1;::::0;27932:6;;27956:8;;27751:19;;27772:12;;27877:37:::1;:219::i;:::-;27848:248;;28169:185;28231:19;28268:18;28304:26;:36;;;28169:44;:185::i;:::-;27200:1165;27098:1267;-1:-1:-1::0;;;;;28468:19:102;;::::1;;::::0;;;:11:::1;:19;::::0;;;;;:30;;-1:-1:-1;;;;;;28468:30:102::1;::::0;;::::1;::::0;;::::1;::::0;;28513:33;::::1;::::0;28468:19;28513:33:::1;28558:29;28589:23:::0;28628:28:::1;28649:6;28628:20;:28::i;:::-;28557:99;;;;28672:9;28667:284;28691:10;:17;28687:1;:21;28667:284;;;28725:183;28777:8;28811:6;28845:10;28856:1;28845:13;;;;;;;;:::i;:::-;;;;;;;28884:6;28891:1;28884:9;;;;;;;;:::i;:::-;;;;;;;28725:23;:183::i;:::-;28935:3;;28667:284;;6024:360:134::0;-1:-1:-1;;;;;6127:40:134;;6106:160;;;;-1:-1:-1;;;6106:160:134;;55089:2:229;6106:160:134;;;55071:21:229;55128:2;55108:18;;;55101:30;55167:34;55147:18;;;55140:62;55238:34;55218:18;;;55211:62;-1:-1:-1;;;55289:19:229;;;55282:40;55339:19;;6106:160:134;54887:477:229;6106:160:134;6299:14;;6281:52;;;-1:-1:-1;;;;;6299:14:134;;;55631:34:229;;55701:15;;;55696:2;55681:18;;55674:43;6281:52:134;;55566:18:229;6281:52:134;;;;;;;6343:14;:34;;-1:-1:-1;;;;;;6343:34:134;-1:-1:-1;;;;;6343:34:134;;;;;;;;;;6024:360::o;34643:308:102:-;-1:-1:-1;;;;;34826:24:102;;;;;;;:14;:24;;;;;;;;:34;;;;;;;;;;;:44;;34864:6;;34826:24;:44;;34864:6;;34826:44;:::i;:::-;;;;;;;;34909:8;-1:-1:-1;;;;;34885:59:102;;34919:6;34927:8;34937:6;34885:59;;;;;;;;:::i;1599:130:39:-;1513:6;;-1:-1:-1;;;;;1513:6:39;929:10:43;1662:23:39;1654:68;;;;-1:-1:-1;;;1654:68:39;;55930:2:229;1654:68:39;;;55912:21:229;;;55949:18;;;55942:30;56008:34;55988:18;;;55981:62;56060:18;;1654:68:39;55728:356:229;39831:1259:102;40013:51;;;39992:172;;;;-1:-1:-1;;;39992:172:102;;56291:2:229;39992:172:102;;;56273:21:229;56330:2;56310:18;;;56303:30;56369:34;56349:18;;;56342:62;56440:34;56420:18;;;56413:62;-1:-1:-1;;;56491:19:229;;;56484:41;56542:19;;39992:172:102;56089:478:229;39992:172:102;40194:11;40174:17;40222:862;40246:9;40242:1;:13;40222:862;;;40276:18;40297:11;;40309:1;40297:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;40369:39:102;;40325:41;40369:39;;;:29;:39;;;;;;40276:35;;-1:-1:-1;40465:22:102;;40488:1;40465:25;;;;;;;:::i;:::-;;;;;;;40422:68;;2105:6:103;40529:32:102;:63;;40504:237;;;;-1:-1:-1;;;40504:237:102;;56774:2:229;40504:237:102;;;56756:21:229;56813:3;56793:18;;;56786:31;56853:34;56833:18;;;56826:62;56924:34;56904:18;;;56897:62;56996:34;56975:19;;;56968:63;-1:-1:-1;;;57047:19:229;;;57040:50;57107:19;;40504:237:102;56572:560:229;40504:237:102;-1:-1:-1;;;;;40807:39:102;;;;;;:29;:39;;;;;;;;;:74;;;40900:173;;57358:51:229;;;57425:18;;57418:34;;;57468:18;;57461:34;;;40900:173:102;;57346:2:229;57331:18;40900:173:102;;;;;;;40262:822;;;40257:3;;;;:::i;:::-;;;40222:862;;;;39982:1108;39831:1259;;;;:::o;2943:441:134:-;3077:14;;-1:-1:-1;;;;;3077:14:134;3069:37;:79;;;;-1:-1:-1;;;;;;3110:38:134;;;;3069:79;3048:197;;;;-1:-1:-1;;;3048:197:134;;57708:2:229;3048:197:134;;;57690:21:229;57747:2;57727:18;;;57720:30;57786:34;57766:18;;;57759:62;57857:34;57837:18;;;57830:62;-1:-1:-1;;;57908:19:229;;;57901:38;57956:19;;3048:197:134;57506:475:229;3048:197:134;3255:7;:26;;;3296:36;;1015:25:229;;;3303:10:134;;3296:36;;1003:2:229;988:18;3296:36:134;;;;;;;3342:35;3361:15;3342:18;:35::i;49864:193:102:-;49998:19;;;;;;;;;;;-1:-1:-1;;;49998:19:102;;;;;49960:89;;699:80:103;49960:89:102;;;58217:25:229;49988:30:102;58258:18:229;;;58251:34;50020:13:102;58301:18:229;;;58294:34;50043:4:102;58344:18:229;;;;58337:60;;;;49960:89:102;;;;;;;;;;58189:19:229;;;;49960:89:102;;;49950:100;;;;;;49864:193::o;2673:187:39:-;2765:6;;;-1:-1:-1;;;;;2781:17:39;;;-1:-1:-1;;;;;;2781:17:39;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;39130:472:102:-;2105:6:103;39243:25:102;:56;;39222:216;;;;-1:-1:-1;;;39222:216:102;;58610:2:229;39222:216:102;;;58592:21:229;58649:3;58629:18;;;58622:31;58689:34;58669:18;;;58662:62;58760:34;58740:18;;;58733:62;58832:34;58811:19;;;58804:63;-1:-1:-1;;;58883:19:229;;;58876:48;58941:19;;39222:216:102;58408:558:229;39222:216:102;39481:24;;39453:80;;;41053:25:229;;;41109:2;41094:18;;41087:34;;;39453:80:102;;41026:18:229;39453:80:102;;;;;;;39543:24;:52;39130:472::o;34265:247::-;-1:-1:-1;;;;;34387:24:102;;;;;;;:14;:24;;;;;;;;:34;;;;;;;;;;;:44;;34425:6;;34387:24;:44;;34425:6;;34387:44;:::i;:::-;;;;;;;;34470:8;-1:-1:-1;;;;;34446:59:102;;34480:6;34488:8;34498:6;34446:59;;;;;;;;:::i;29300:4834::-;29506:22;29531:35;;29555:10;29531:35;:::i;:::-;29598:34;;;;:18;:34;;;;;;29506:60;;-1:-1:-1;29598:34:102;;29577:149;;;;-1:-1:-1;;;29577:149:102;;59635:2:229;29577:149:102;;;59617:21:229;59674:2;59654:18;;;59647:30;-1:-1:-1;;;;;;;;;;;59693:18:229;;;59686:62;59784:34;59764:18;;;59757:62;-1:-1:-1;;;59835:19:229;;;59828:34;59879:19;;29577:149:102;59433:471:229;29577:149:102;29782:24;;29810:12;;29758:21;;;;;;;;:::i;:::-;:48;;;;;;:::i;:::-;:64;;29737:207;;;;-1:-1:-1;;;29737:207:102;;60111:2:229;29737:207:102;;;60093:21:229;60150:2;60130:18;;;60123:30;-1:-1:-1;;;;;;;;;;;60169:18:229;;;60162:62;60260:34;60240:18;;;60233:62;60332:33;60311:19;;;60304:62;60383:19;;29737:207:102;59909:499:229;29737:207:102;29990:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;29976:35:102;:10;-1:-1:-1;;;;;29976:35:102;;29955:163;;;;-1:-1:-1;;;29955:163:102;;60615:2:229;29955:163:102;;;60597:21:229;60654:2;60634:18;;;60627:30;-1:-1:-1;;;;;;;;;;;60673:18:229;;;60666:62;60764:34;60744:18;;;60737:62;-1:-1:-1;;;60815:19:229;;;60808:47;60872:19;;29955:163:102;60413:484:229;29955:163:102;30133:15;30129:217;;;30206:21;;;;:10;:21;:::i;:::-;30189:45;;;-1:-1:-1;30164:171:102;;;;-1:-1:-1;;;30164:171:102;;61104:2:229;30164:171:102;;;61086:21:229;61143:2;61123:18;;;61116:30;-1:-1:-1;;;;;;;;;;;61162:18:229;;;61155:62;61253:34;61233:18;;;61226:62;-1:-1:-1;;;61304:19:229;;;61297:33;61347:19;;30164:171:102;60902:470:229;30164:171:102;30417:34;;;;:18;:34;;;;;30410:41;;-1:-1:-1;;30410:41:102;;;30593:3484;;;;30633:9;30628:697;30652:21;;;;:10;:21;:::i;:::-;:28;;30648:1;:32;30628:697;;;30814:12;30755:29;:55;30785:21;;;;:10;:21;:::i;:::-;30807:1;30785:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;30755:55:102;;;;;;;;;;;;-1:-1:-1;30755:55:102;;30731:21;;;;;;;;:::i;:::-;:79;;;;;;:::i;:::-;:95;;30702:276;;;;-1:-1:-1;;;30702:276:102;;;;;;;:::i;:::-;30997:278;31051:17;;;;:10;:17;:::i;:::-;31102:10;31144:21;;;;:10;:21;:::i;:::-;31166:1;31144:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;31198:17;;;;:10;:17;:::i;:::-;31216:1;31198:20;;;;;;;:::i;:::-;;;;;;;31247:6;;31254:1;31247:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;30997:23;:278::i;:::-;31305:3;;30628:697;;;;30593:3484;;;31532:10;31494:23;31520;;;:11;:23;;;;;;-1:-1:-1;;;;;31520:23:102;;31557:2510;31581:21;;;;:10;:21;:::i;:::-;:28;;31577:1;:32;31557:2510;;;31743:12;31684:29;:55;31714:21;;;;:10;:21;:::i;:::-;31736:1;31714:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31684:55:102;;;;;;;;;;;;-1:-1:-1;31684:55:102;;31660:21;;;;;;;;:::i;:::-;:79;;;;;;:::i;:::-;:95;;31631:277;;;;-1:-1:-1;;;31631:277:102;;;;;;;:::i;:::-;2088:42;32170:21;;;;:10;:21;:::i;:::-;32192:1;32170:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32170:50:102;;32166:1852;;;32244:14;32261:17;;;;:10;:17;:::i;:::-;32244:34;-1:-1:-1;32558:36:102;-1:-1:-1;;;;;32597:15:102;:25;;32244:34;32699:17;;;;:10;:17;:::i;:::-;32717:1;32699:20;;;;;;;:::i;:::-;32597:145;;-1:-1:-1;;;;;;32597:145:102;;;;;;;-1:-1:-1;;;;;49221:32:229;;;32597:145:102;;;49203:51:229;32699:20:102;;;;;;;49270:18:229;;;49263:34;-1:-1:-1;49176:18:229;;32597:145:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32791:19:102;;;32764:24;32791:19;;;:11;:19;;;;;;32558:184;;-1:-1:-1;32791:19:102;32890:30;;32886:451;;32948:366;33012:16;33151:6;33197:21;;;;:10;:21;:::i;:::-;33219:1;33197:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;33259:28;32948:23;:366::i;:::-;32222:1133;;;32166:1852;;;33383:15;-1:-1:-1;;;;;33383:25:102;;33409:10;33421:6;;33428:1;33421:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;33432:21;;;;:10;:21;:::i;:::-;33454:1;33432:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;33458:17;;;;:10;:17;:::i;:::-;33476:1;33458:20;;;;;;;:::i;:::-;33383:96;;;;;;-1:-1:-1;;;;;;33383:96:102;;;-1:-1:-1;;;;;62716:15:229;;;33383:96:102;;;62698:34:229;62768:15;;;62748:18;;;62741:43;62820:15;;;;62800:18;;;62793:43;33458:20:102;;;;;;62852:18:229;;;62845:34;62632:19;;;-1:-1:-1;33383:96:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;33559:29:102;;;33555:445;;33616:361;33680:15;33818:10;33868:21;;;;:10;:21;:::i;:::-;33890:1;33868:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;33930:17;;;;:10;:17;:::i;:::-;33948:1;33930:20;;;;;;;:::i;:::-;;;;;;;33616:23;:361::i;:::-;34047:3;;31557:2510;;;;31480:2597;30593:3484;34092:35;;1015:25:229;;;34092:35:102;;1003:2:229;988:18;34092:35:102;;;;;;;29496:4638;29300:4834;;;;;:::o;974:926:130:-;-1:-1:-1;;;;;1476:19:42;;;:23;1410:484:130;;1481:56;;-1:-1:-1;;;1481:56:130;;;1541:18;-1:-1:-1;;;;;1481:33:130;;;574:10;;1481:56;;1515:10;;1527:9;;1481:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1481:78:130;;1456:220;;;;-1:-1:-1;;;1456:220:130;;64058:2:229;1456:220:130;;;64040:21:229;64097:2;64077:18;;;64070:30;64136:34;64116:18;;;64109:62;64207:34;64187:18;;;64180:62;-1:-1:-1;;;64258:19:229;;;64251:50;64318:19;;1456:220:130;63856:487:229;1410:484:130;1772:6;-1:-1:-1;;;;;1732:46:130;:36;1746:10;1758:9;1732:13;:36::i;:::-;-1:-1:-1;;;;;1732:46:130;;1707:176;;;;-1:-1:-1;;;1707:176:130;;64550:2:229;1707:176:130;;;64532:21:229;64589:2;64569:18;;;64562:30;64628:34;64608:18;;;64601:62;64699:34;64679:18;;;64672:62;-1:-1:-1;;;64750:19:229;;;64743:38;64798:19;;1707:176:130;64348:475:229;38648:476:102;-1:-1:-1;;;;;38790:34:102;;2088:42;38790:34;38786:332;;;38840:161;;-1:-1:-1;;;38840:161:102;;-1:-1:-1;;;;;38840:15:102;:38;;;;:161;;38907:6;;38944:10;;38980:6;;38840:161;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38786:332;;;39032:75;;-1:-1:-1;;;39032:75:102;;-1:-1:-1;;;;;65530:15:229;;;39032:75:102;;;65512:34:229;65582:15;;;65562:18;;;65555:43;65614:18;;;65607:34;;;65677:15;;;65657:18;;;65650:43;39032:15:102;:38;;;;65446:19:229;;39032:75:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38786:332;38648:476;;;;;:::o;4402:227:74:-;4480:7;4500:17;4519:18;4541:27;4552:4;4558:9;4541:10;:27::i;:::-;4499:69;;;;4578:18;4590:5;4578:11;:18::i;2243:1373::-;2324:7;2333:12;2554:9;:16;2574:2;2554:22;2550:1060;;;2890:4;2875:20;;2869:27;2939:4;2924:20;;2918:27;2996:4;2981:20;;2975:27;2592:9;2967:36;3037:25;3048:4;2967:36;2869:27;2918;3037:10;:25::i;:::-;3030:32;;;;;;;;;2550:1060;3083:9;:16;3103:2;3083:22;3079:531;;;3399:4;3384:20;;3378:27;3449:4;3434:20;;3428:27;3489:23;3500:4;3378:27;3428;3489:10;:23::i;:::-;3482:30;;;;;;;;3079:531;-1:-1:-1;3559:1:74;;-1:-1:-1;3563:35:74;3079:531;2243:1373;;;;;:::o;548:631::-;625:20;616:5;:29;;;;;;;;:::i;:::-;;612:561;;;548:631;:::o;612:561::-;721:29;712:5;:38;;;;;;;;:::i;:::-;;708:465;;;766:34;;-1:-1:-1;;;766:34:74;;66038:2:229;766:34:74;;;66020:21:229;66077:2;66057:18;;;66050:30;66116:26;66096:18;;;66089:54;66160:18;;766:34:74;65836:348:229;708:465:74;830:35;821:5;:44;;;;;;;;:::i;:::-;;817:356;;;881:41;;-1:-1:-1;;;881:41:74;;66391:2:229;881:41:74;;;66373:21:229;66430:2;66410:18;;;66403:30;66469:33;66449:18;;;66442:61;66520:18;;881:41:74;66189:355:229;817:356:74;952:30;943:5;:39;;;;;;;;:::i;:::-;;939:234;;;998:44;;-1:-1:-1;;;998:44:74;;66751:2:229;998:44:74;;;66733:21:229;66790:2;66770:18;;;66763:30;66829:34;66809:18;;;66802:62;-1:-1:-1;;;66880:18:229;;;66873:32;66922:19;;998:44:74;66549:398:229;939:234:74;1072:30;1063:5;:39;;;;;;;;:::i;:::-;;1059:114;;;1118:44;;-1:-1:-1;;;1118:44:74;;67154:2:229;1118:44:74;;;67136:21:229;67193:2;67173:18;;;67166:30;67232:34;67212:18;;;67205:62;-1:-1:-1;;;67283:18:229;;;67276:32;67325:19;;1118:44:74;66952:398:229;5810:1603:74;5936:7;;6860:66;6847:79;;6843:161;;;-1:-1:-1;6958:1:74;;-1:-1:-1;6962:30:74;6942:51;;6843:161;7017:1;:7;;7022:2;7017:7;;:18;;;;;7028:1;:7;;7033:2;7028:7;;7017:18;7013:100;;;-1:-1:-1;7067:1:74;;-1:-1:-1;7071:30:74;7051:51;;7013:100;7224:24;;;7207:14;7224:24;;;;;;;;;67582:25:229;;;67655:4;67643:17;;67623:18;;;67616:45;;;;67677:18;;;67670:34;;;67720:18;;;67713:34;;;7224:24:74;;67554:19:229;;7224:24:74;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7224:24:74;;-1:-1:-1;;7224:24:74;;;-1:-1:-1;;;;;;;7262:20:74;;7258:101;;7314:1;7318:29;7298:50;;;;;;;7258:101;7377:6;-1:-1:-1;7385:20:74;;-1:-1:-1;5810:1603:74;;;;;;;;:::o;4883:336::-;4993:7;;-1:-1:-1;;;;;5038:80:74;;4993:7;5144:25;5160:3;5145:18;;;5167:2;5144:25;:::i;:::-;5128:42;;5187:25;5198:4;5204:1;5207;5210;5187:10;:25::i;:::-;5180:32;;;;;;4883:336;;;;;;:::o;14:378:229:-;88:8;98:6;152:3;145:4;137:6;133:17;129:27;119:55;;170:1;167;160:12;119:55;-1:-1:-1;193:20:229;;-1:-1:-1;;;;;225:30:229;;222:50;;;268:1;265;258:12;222:50;305:4;297:6;293:17;281:29;;365:3;358:4;348:6;345:1;341:14;333:6;329:27;325:38;322:47;319:67;;;382:1;379;372:12;397:467;502:6;510;563:2;551:9;542:7;538:23;534:32;531:52;;;579:1;576;569:12;531:52;619:9;606:23;-1:-1:-1;;;;;644:6:229;641:30;638:50;;;684:1;681;674:12;638:50;723:81;796:7;787:6;776:9;772:22;723:81;:::i;:::-;823:8;;697:107;;-1:-1:-1;397:467:229;-1:-1:-1;;;;397:467:229:o;1233:131::-;-1:-1:-1;;;;;1308:31:229;;1298:42;;1288:70;;1354:1;1351;1344:12;1369:134;1437:20;;1466:31;1437:20;1466:31;:::i;:::-;1369:134;;;:::o;1508:667::-;1603:6;1611;1619;1627;1635;1688:3;1676:9;1667:7;1663:23;1659:33;1656:53;;;1705:1;1702;1695:12;1656:53;1744:9;1731:23;1763:31;1788:5;1763:31;:::i;:::-;1813:5;-1:-1:-1;1870:2:229;1855:18;;1842:32;1883:33;1842:32;1883:33;:::i;:::-;1935:7;-1:-1:-1;1994:2:229;1979:18;;1966:32;2007:33;1966:32;2007:33;:::i;:::-;1508:667;;;;-1:-1:-1;2059:7:229;;2113:2;2098:18;;2085:32;;-1:-1:-1;2164:3:229;2149:19;2136:33;;1508:667;-1:-1:-1;;1508:667:229:o;2676:632::-;2847:2;2899:21;;;2969:13;;2872:18;;;2991:22;;;2818:4;;2847:2;3070:15;;;;3044:2;3029:18;;;2818:4;3113:169;3127:6;3124:1;3121:13;3113:169;;;3188:13;;3176:26;;3257:15;;;;3222:12;;;;3149:1;3142:9;3113:169;;;-1:-1:-1;3299:3:229;;2676:632;-1:-1:-1;;;;;;2676:632:229:o;3313:163::-;3381:5;3426:2;3417:6;3412:3;3408:16;3404:25;3401:45;;;3442:1;3439;3432:12;3401:45;-1:-1:-1;3464:6:229;3313:163;-1:-1:-1;3313:163:229:o;3481:348::-;3533:8;3543:6;3597:3;3590:4;3582:6;3578:17;3574:27;3564:55;;3615:1;3612;3605:12;3564:55;-1:-1:-1;3638:20:229;;-1:-1:-1;;;;;3670:30:229;;3667:50;;;3713:1;3710;3703:12;3667:50;3750:4;3742:6;3738:17;3726:29;;3802:3;3795:4;3786:6;3778;3774:19;3770:30;3767:39;3764:59;;;3819:1;3816;3809:12;3834:555;3950:6;3958;3966;4019:3;4007:9;3998:7;3994:23;3990:33;3987:53;;;4036:1;4033;4026:12;3987:53;4059:62;4113:7;4102:9;4059:62;:::i;:::-;4049:72;;4172:2;4161:9;4157:18;4144:32;-1:-1:-1;;;;;4191:6:229;4188:30;4185:50;;;4231:1;4228;4221:12;4185:50;4270:59;4321:7;4312:6;4301:9;4297:22;4270:59;:::i;:::-;3834:555;;4348:8;;-1:-1:-1;4244:85:229;;-1:-1:-1;;;;3834:555:229:o;4394:272::-;4478:6;4531:2;4519:9;4510:7;4506:23;4502:32;4499:52;;;4547:1;4544;4537:12;4499:52;4586:9;4573:23;4605:31;4630:5;4605:31;:::i;:::-;4655:5;4394:272;-1:-1:-1;;;4394:272:229:o;4671:475::-;4767:6;4775;4783;4836:2;4824:9;4815:7;4811:23;4807:32;4804:52;;;4852:1;4849;4842:12;4804:52;4891:9;4878:23;4910:31;4935:5;4910:31;:::i;:::-;4960:5;-1:-1:-1;5017:2:229;5002:18;;4989:32;5030:33;4989:32;5030:33;:::i;:::-;4671:475;;5082:7;;-1:-1:-1;;;5136:2:229;5121:18;;;;5108:32;;4671:475::o;5151:180::-;5210:6;5263:2;5251:9;5242:7;5238:23;5234:32;5231:52;;;5279:1;5276;5269:12;5231:52;-1:-1:-1;5302:23:229;;5151:180;-1:-1:-1;5151:180:229:o;5336:814::-;5477:6;5485;5493;5501;5554:2;5542:9;5533:7;5529:23;5525:32;5522:52;;;5570:1;5567;5560:12;5522:52;5610:9;5597:23;-1:-1:-1;;;;;5680:2:229;5672:6;5669:14;5666:34;;;5696:1;5693;5686:12;5666:34;5735:81;5808:7;5799:6;5788:9;5784:22;5735:81;:::i;:::-;5835:8;;-1:-1:-1;5709:107:229;-1:-1:-1;5923:2:229;5908:18;;5895:32;;-1:-1:-1;5939:16:229;;;5936:36;;;5968:1;5965;5958:12;5936:36;;6007:83;6082:7;6071:8;6060:9;6056:24;6007:83;:::i;:::-;5336:814;;;;-1:-1:-1;6109:8:229;-1:-1:-1;;;;5336:814:229:o;6868:1254::-;7070:6;7078;7086;7094;7102;7110;7118;7126;7179:3;7167:9;7158:7;7154:23;7150:33;7147:53;;;7196:1;7193;7186:12;7147:53;7235:9;7222:23;7254:31;7279:5;7254:31;:::i;:::-;7304:5;-1:-1:-1;7361:2:229;7346:18;;7333:32;7374:33;7333:32;7374:33;:::i;:::-;7426:7;-1:-1:-1;7480:2:229;7465:18;;7452:32;;-1:-1:-1;7531:2:229;7516:18;;7503:32;;-1:-1:-1;7586:3:229;7571:19;;7558:33;-1:-1:-1;;;;;7640:14:229;;;7637:34;;;7667:1;7664;7657:12;7637:34;7706:81;7779:7;7770:6;7759:9;7755:22;7706:81;:::i;:::-;7806:8;;-1:-1:-1;7680:107:229;-1:-1:-1;7894:3:229;7879:19;;7866:33;;-1:-1:-1;7911:16:229;;;7908:36;;;7940:1;7937;7930:12;7908:36;;7979:83;8054:7;8043:8;8032:9;8028:24;7979:83;:::i;:::-;6868:1254;;;;-1:-1:-1;6868:1254:229;;-1:-1:-1;6868:1254:229;;;;;;8081:8;-1:-1:-1;;;6868:1254:229:o;8127:1519::-;8392:6;8400;8408;8416;8424;8432;8440;8448;8501:3;8489:9;8480:7;8476:23;8472:33;8469:53;;;8518:1;8515;8508:12;8469:53;8558:9;8545:23;-1:-1:-1;;;;;8628:2:229;8620:6;8617:14;8614:34;;;8644:1;8641;8634:12;8614:34;8683:81;8756:7;8747:6;8736:9;8732:22;8683:81;:::i;:::-;8783:8;;-1:-1:-1;8657:107:229;-1:-1:-1;8871:2:229;8856:18;;8843:32;;-1:-1:-1;8887:16:229;;;8884:36;;;8916:1;8913;8906:12;8884:36;8955:83;9030:7;9019:8;9008:9;9004:24;8955:83;:::i;:::-;9057:8;;-1:-1:-1;8929:109:229;-1:-1:-1;9145:2:229;9130:18;;9117:32;;-1:-1:-1;9161:16:229;;;9158:36;;;9190:1;9187;9180:12;9158:36;9229:83;9304:7;9293:8;9282:9;9278:24;9229:83;:::i;:::-;9331:8;;-1:-1:-1;9203:109:229;-1:-1:-1;9419:2:229;9404:18;;9391:32;;-1:-1:-1;9435:16:229;;;9432:36;;;9464:1;9461;9454:12;10628:127;10689:10;10684:3;10680:20;10677:1;10670:31;10720:4;10717:1;10710:15;10744:4;10741:1;10734:15;10760:253;10832:2;10826:9;10874:4;10862:17;;-1:-1:-1;;;;;10894:34:229;;10930:22;;;10891:62;10888:88;;;10956:18;;:::i;:::-;10992:2;10985:22;10760:253;:::o;11018:257::-;11090:4;11084:11;;;11122:17;;-1:-1:-1;;;;;11154:34:229;;11190:22;;;11151:62;11148:88;;;11216:18;;:::i;11280:253::-;11352:2;11346:9;11394:4;11382:17;;-1:-1:-1;;;;;11414:34:229;;11450:22;;;11411:62;11408:88;;;11476:18;;:::i;11538:275::-;11609:2;11603:9;11674:2;11655:13;;-1:-1:-1;;11651:27:229;11639:40;;-1:-1:-1;;;;;11694:34:229;;11730:22;;;11691:62;11688:88;;;11756:18;;:::i;:::-;11792:2;11785:22;11538:275;;-1:-1:-1;11538:275:229:o;11818:121::-;11903:10;11896:5;11892:22;11885:5;11882:33;11872:61;;11929:1;11926;11919:12;11944:132;12011:20;;12040:30;12011:20;12040:30;:::i;12081:194::-;12152:4;-1:-1:-1;;;;;12177:6:229;12174:30;12171:56;;;12207:18;;:::i;:::-;-1:-1:-1;12252:1:229;12248:14;12264:4;12244:25;;12081:194::o;12280:759::-;12345:5;12398:3;12391:4;12383:6;12379:17;12375:27;12365:55;;12416:1;12413;12406:12;12365:55;12452:6;12439:20;12478:4;12502:71;12518:54;12569:2;12518:54;:::i;:::-;12502:71;:::i;:::-;12607:15;;;12693:1;12689:10;;;;12677:23;;12673:32;;;12638:12;;;;12717:15;;;12714:35;;;12745:1;12742;12735:12;12714:35;12781:2;12773:6;12769:15;12793:217;12809:6;12804:3;12801:15;12793:217;;;12889:3;12876:17;12906:31;12931:5;12906:31;:::i;:::-;12950:18;;12988:12;;;;12826;;12793:217;;;-1:-1:-1;13028:5:229;12280:759;-1:-1:-1;;;;;;12280:759:229:o;13044:673::-;13098:5;13151:3;13144:4;13136:6;13132:17;13128:27;13118:55;;13169:1;13166;13159:12;13118:55;13205:6;13192:20;13231:4;13255:71;13271:54;13322:2;13271:54;:::i;13255:71::-;13360:15;;;13446:1;13442:10;;;;13430:23;;13426:32;;;13391:12;;;;13470:15;;;13467:35;;;13498:1;13495;13488:12;13467:35;13534:2;13526:6;13522:15;13546:142;13562:6;13557:3;13554:15;13546:142;;;13628:17;;13616:30;;13666:12;;;;13579;;13546:142;;13722:939;13779:5;13827:4;13815:9;13810:3;13806:19;13802:30;13799:50;;;13845:1;13842;13835:12;13799:50;13867:22;;:::i;:::-;13858:31;;13912:29;13931:9;13912:29;:::i;:::-;13905:5;13898:44;13974:38;14008:2;13997:9;13993:18;13974:38;:::i;:::-;13969:2;13962:5;13958:14;13951:62;14045:38;14079:2;14068:9;14064:18;14045:38;:::i;:::-;14040:2;14033:5;14029:14;14022:62;14144:2;14133:9;14129:18;14116:32;14111:2;14104:5;14100:14;14093:56;14182:38;14215:3;14204:9;14200:19;14182:38;:::i;:::-;14176:3;14169:5;14165:15;14158:63;14272:3;14261:9;14257:19;14244:33;-1:-1:-1;;;;;14337:2:229;14329:6;14326:14;14323:34;;;14353:1;14350;14343:12;14323:34;14390:68;14454:3;14445:6;14434:9;14430:22;14390:68;:::i;:::-;14384:3;14377:5;14373:15;14366:93;14512:3;14501:9;14497:19;14484:33;14468:49;;14542:2;14532:8;14529:16;14526:36;;;14558:1;14555;14548:12;14526:36;;14595:59;14650:3;14639:8;14628:9;14624:24;14595:59;:::i;:::-;14589:3;14582:5;14578:15;14571:84;;13722:939;;;;:::o;14666:352::-;14754:6;14807:2;14795:9;14786:7;14782:23;14778:32;14775:52;;;14823:1;14820;14813:12;14775:52;14863:9;14850:23;-1:-1:-1;;;;;14888:6:229;14885:30;14882:50;;;14928:1;14925;14918:12;14882:50;14951:61;15004:7;14995:6;14984:9;14980:22;14951:61;:::i;:::-;14941:71;14666:352;-1:-1:-1;;;;14666:352:229:o;15023:269::-;15080:6;15133:2;15121:9;15112:7;15108:23;15104:32;15101:52;;;15149:1;15146;15139:12;15101:52;15188:9;15175:23;15238:4;15231:5;15227:16;15220:5;15217:27;15207:55;;15258:1;15255;15248:12;15297:504;15379:5;15427:4;15415:9;15410:3;15406:19;15402:30;15399:50;;;15445:1;15442;15435:12;15399:50;15467:22;;:::i;:::-;15458:31;;15526:9;15513:23;15545:33;15570:7;15545:33;:::i;:::-;15587:22;;15661:2;15646:18;;15633:32;15709:26;15696:40;;15684:53;;15674:81;;15751:1;15748;15741:12;15674:81;15782:2;15771:14;;15764:31;15775:5;15297:504;-1:-1:-1;;15297:504:229:o;15806:2353::-;15942:6;15973:2;16016;16004:9;15995:7;15991:23;15987:32;15984:52;;;16032:1;16029;16022:12;15984:52;16072:9;16059:23;-1:-1:-1;;;;;16142:2:229;16134:6;16131:14;16128:34;;;16158:1;16155;16148:12;16128:34;16196:6;16185:9;16181:22;16171:32;;16241:7;16234:4;16230:2;16226:13;16222:27;16212:55;;16263:1;16260;16253:12;16212:55;16299:2;16286:16;16322:71;16338:54;16389:2;16338:54;:::i;16322:71::-;16427:15;;;16509:1;16505:10;;;;16497:19;;16493:28;;;16458:12;;;;16533:19;;;16530:39;;;16565:1;16562;16555:12;16530:39;16597:2;16593;16589:11;16609:1520;16625:6;16620:3;16617:15;16609:1520;;;16711:3;16698:17;16747:2;16734:11;16731:19;16728:109;;;16791:1;16820:2;16816;16809:14;16728:109;16860:20;;16903:4;16931:16;;;-1:-1:-1;;16927:30:229;16923:39;-1:-1:-1;16920:129:229;;;17003:1;17032:2;17028;17021:14;16920:129;17075:22;;:::i;:::-;17147:2;17143;17139:11;17126:25;17180:2;17170:8;17167:16;17164:106;;;17224:1;17253:2;17249;17242:14;17164:106;17297:76;17365:7;17360:2;17349:8;17345:2;17341:17;17337:26;17297:76;:::i;:::-;17290:5;17283:91;;17398:2;17450:3;17446:2;17442:12;17429:26;17484:2;17474:8;17471:16;17468:109;;;17529:1;17559:3;17554;17547:16;17468:109;17613:65;17670:7;17665:2;17654:8;17650:2;17646:17;17642:26;17613:65;:::i;:::-;17608:2;17601:5;17597:14;17590:89;;17703:2;17742:32;17769:3;17765:2;17761:12;17742:32;:::i;:::-;17736:3;17729:5;17725:15;17718:57;17799:4;17788:15;;17840:76;17908:7;17902:3;17898:2;17894:12;17840:76;:::i;:::-;17823:15;;;17816:101;17954:32;17980:4;17972:13;;17954:32;:::i;:::-;17937:15;;;17930:57;18024:31;18043:11;;;18024:31;:::i;:::-;18018:3;18007:15;;18000:56;18069:18;;-1:-1:-1;;18107:12:229;;;;16642;;16609:1520;;;-1:-1:-1;18148:5:229;15806:2353;-1:-1:-1;;;;;;;;15806:2353:229:o;18164:118::-;18250:5;18243:13;18236:21;18229:5;18226:32;18216:60;;18272:1;18269;18262:12;18287:952;18444:6;18452;18460;18468;18476;18529:3;18517:9;18508:7;18504:23;18500:33;18497:53;;;18546:1;18543;18536:12;18497:53;18586:9;18573:23;-1:-1:-1;;;;;18656:2:229;18648:6;18645:14;18642:34;;;18672:1;18669;18662:12;18642:34;18695:22;;;;18751:3;18733:16;;;18729:26;18726:46;;;18768:1;18765;18758:12;18726:46;18791:2;;-1:-1:-1;18846:2:229;18831:18;;18818:32;;18862:16;;;18859:36;;;18891:1;18888;18881:12;18859:36;;18930:83;19005:7;18994:8;18983:9;18979:24;18930:83;:::i;:::-;19032:8;;-1:-1:-1;18904:109:229;-1:-1:-1;;19114:2:229;19099:18;;19086:32;;-1:-1:-1;19168:2:229;19153:18;;19140:32;19181:28;19140:32;19181:28;:::i;:::-;19228:5;19218:15;;;18287:952;;;;;;;;:::o;19244:407::-;19331:6;19339;19392:2;19380:9;19371:7;19367:23;19363:32;19360:52;;;19408:1;19405;19398:12;19360:52;19447:9;19434:23;19466:31;19491:5;19466:31;:::i;:::-;19516:5;-1:-1:-1;19573:2:229;19558:18;;19545:32;19586:33;19545:32;19586:33;:::i;:::-;19638:7;19628:17;;;19244:407;;;;;:::o;19656:862::-;19722:5;19770:4;19758:9;19753:3;19749:19;19745:30;19742:50;;;19788:1;19785;19778:12;19742:50;19810:22;;:::i;:::-;19801:31;;19868:9;19855:23;-1:-1:-1;;;;;19938:2:229;19930:6;19927:14;19924:34;;;19954:1;19951;19944:12;19924:34;19992:6;19981:9;19977:22;19967:32;;20037:3;20030:4;20026:2;20022:13;20018:23;20008:51;;20055:1;20052;20045:12;20008:51;20091:2;20078:16;20113:4;20136:2;20132;20129:10;20126:36;;;20142:18;;:::i;:::-;20184:53;20227:2;20208:13;;-1:-1:-1;;20204:27:229;20200:36;;20184:53;:::i;:::-;20171:66;;20260:2;20253:5;20246:17;20300:3;20295:2;20290;20286;20282:11;20278:20;20275:29;20272:49;;;20317:1;20314;20307:12;20272:49;20372:2;20367;20363;20359:11;20354:2;20347:5;20343:14;20330:45;20416:1;20411:2;20406;20399:5;20395:14;20391:23;20384:34;20441:5;20434;20427:20;20507:2;20496:9;20492:18;20479:32;20474:2;20467:5;20463:14;20456:56;;;;;19656:862;;;;:::o;20523:985::-;20694:6;20702;20710;20718;20726;20779:3;20767:9;20758:7;20754:23;20750:33;20747:53;;;20796:1;20793;20786:12;20747:53;20835:9;20822:23;20854:31;20879:5;20854:31;:::i;:::-;20904:5;-1:-1:-1;20961:2:229;20946:18;;20933:32;20974:33;20933:32;20974:33;:::i;:::-;21026:7;-1:-1:-1;21084:2:229;21069:18;;21056:32;-1:-1:-1;;;;;21137:14:229;;;21134:34;;;21164:1;21161;21154:12;21134:34;21187:70;21249:7;21240:6;21229:9;21225:22;21187:70;:::i;:::-;21177:80;;21310:2;21299:9;21295:18;21282:32;21266:48;;21339:2;21329:8;21326:16;21323:36;;;21355:1;21352;21345:12;21323:36;;21378:72;21442:7;21431:8;21420:9;21416:24;21378:72;:::i;:::-;20523:985;;;;-1:-1:-1;20523:985:229;;21497:3;21482:19;21469:33;;20523:985;-1:-1:-1;;;20523:985:229:o;21746:513::-;21858:6;21866;21919:2;21907:9;21898:7;21894:23;21890:32;21887:52;;;21935:1;21932;21925:12;21887:52;21974:9;21961:23;21993:31;22018:5;21993:31;:::i;:::-;22043:5;-1:-1:-1;22099:2:229;22084:18;;22071:32;-1:-1:-1;;;;;22115:30:229;;22112:50;;;22158:1;22155;22148:12;22112:50;22181:72;22245:7;22236:6;22225:9;22221:22;22181:72;:::i;:::-;22171:82;;;21746:513;;;;;:::o;22264:435::-;22317:3;22355:5;22349:12;22382:6;22377:3;22370:19;22408:4;22437:2;22432:3;22428:12;22421:19;;22474:2;22467:5;22463:14;22495:1;22505:169;22519:6;22516:1;22513:13;22505:169;;;22580:13;;22568:26;;22614:12;;;;22649:15;;;;22541:1;22534:9;22505:169;;;-1:-1:-1;22690:3:229;;22264:435;-1:-1:-1;;;;;22264:435:229:o;22704:261::-;22883:2;22872:9;22865:21;22846:4;22903:56;22955:2;22944:9;22940:18;22932:6;22903:56;:::i;23197:411::-;23268:6;23276;23329:2;23317:9;23308:7;23304:23;23300:32;23297:52;;;23345:1;23342;23335:12;23297:52;23385:9;23372:23;-1:-1:-1;;;;;23410:6:229;23407:30;23404:50;;;23450:1;23447;23440:12;23404:50;23489:59;23540:7;23531:6;23520:9;23516:22;23489:59;:::i;24024:315::-;24092:6;24100;24153:2;24141:9;24132:7;24128:23;24124:32;24121:52;;;24169:1;24166;24159:12;24121:52;24208:9;24195:23;24227:31;24252:5;24227:31;:::i;:::-;24277:5;24329:2;24314:18;;;;24301:32;;-1:-1:-1;;;24024:315:229:o;25170:525::-;25256:6;25264;25272;25280;25333:3;25321:9;25312:7;25308:23;25304:33;25301:53;;;25350:1;25347;25340:12;25301:53;25389:9;25376:23;25408:31;25433:5;25408:31;:::i;:::-;25458:5;-1:-1:-1;25510:2:229;25495:18;;25482:32;;-1:-1:-1;25566:2:229;25551:18;;25538:32;25579:33;25538:32;25579:33;:::i;:::-;25170:525;;;;-1:-1:-1;25631:7:229;;25685:2;25670:18;25657:32;;-1:-1:-1;;25170:525:229:o;25700:472::-;25764:3;25802:5;25796:12;25829:6;25824:3;25817:19;25855:4;25884:2;25879:3;25875:12;25868:19;;25921:2;25914:5;25910:14;25942:1;25952:195;25966:6;25963:1;25960:13;25952:195;;;26031:13;;-1:-1:-1;;;;;26027:39:229;26015:52;;26087:12;;;;26122:15;;;;26063:1;25981:9;25952:195;;26177:495;26453:2;26442:9;26435:21;26416:4;26479:67;26542:2;26531:9;26527:18;26519:6;26479:67;:::i;:::-;26594:9;26586:6;26582:22;26577:2;26566:9;26562:18;26555:50;26622:44;26659:6;26651;26622:44;:::i;26677:573::-;26792:6;26800;26808;26861:2;26849:9;26840:7;26836:23;26832:32;26829:52;;;26877:1;26874;26867:12;26829:52;26916:9;26903:23;26935:31;26960:5;26935:31;:::i;:::-;26985:5;-1:-1:-1;27041:2:229;27026:18;;27013:32;-1:-1:-1;;;;;27057:30:229;;27054:50;;;27100:1;27097;27090:12;27054:50;27123:70;27185:7;27176:6;27165:9;27161:22;27123:70;:::i;:::-;27113:80;;;27240:2;27229:9;27225:18;27212:32;27202:42;;26677:573;;;;;:::o;27255:255::-;27350:6;27403:2;27391:9;27382:7;27378:23;27374:32;27371:52;;;27419:1;27416;27409:12;27371:52;27442:62;27496:7;27485:9;27442:62;:::i;27515:127::-;27576:10;27571:3;27567:20;27564:1;27557:31;27607:4;27604:1;27597:15;27631:4;27628:1;27621:15;27647:127;27708:10;27703:3;27699:20;27696:1;27689:31;27739:4;27736:1;27729:15;27763:4;27760:1;27753:15;27779:135;27818:3;-1:-1:-1;;27839:17:229;;27836:43;;;27859:18;;:::i;:::-;-1:-1:-1;27906:1:229;27895:13;;27779:135::o;28921:349::-;29123:2;29105:21;;;29162:2;29142:18;;;29135:30;29201:27;29196:2;29181:18;;29174:55;29261:2;29246:18;;28921:349::o;29275:340::-;29384:4;29442:11;29429:25;29536:2;29532:7;29521:8;29505:14;29501:29;29497:43;29477:18;29473:68;29463:96;;29555:1;29552;29545:12;29463:96;29576:33;;;;;29275:340;-1:-1:-1;;29275:340:229:o;29620:545::-;29713:4;29719:6;29779:11;29766:25;29873:2;29869:7;29858:8;29842:14;29838:29;29834:43;29814:18;29810:68;29800:96;;29892:1;29889;29882:12;29800:96;29919:33;;29971:20;;;-1:-1:-1;;;;;;30003:30:229;;30000:50;;;30046:1;30043;30036:12;30000:50;30079:4;30067:17;;-1:-1:-1;30130:1:229;30126:14;;;30110;30106:35;30096:46;;30093:66;;;30155:1;30152;30145:12;32071:686;32275:2;32260:18;;32300:20;;32329:31;32300:20;32329:31;:::i;:::-;-1:-1:-1;;;;;32425:14:229;;;32407:33;;32489:4;32477:17;;32464:31;;32504:33;32464:31;32504:33;:::i;:::-;32575:16;32568:4;32553:20;;32546:46;32641:4;32629:17;;32616:31;32656:32;32616:31;32656:32;:::i;:::-;32739:10;32730:7;32726:24;32719:4;32708:9;32704:20;32697:54;;32071:686;;;;:::o;32762:390::-;32921:2;32910:9;32903:21;32960:6;32955:2;32944:9;32940:18;32933:34;33017:6;33009;33004:2;32993:9;32989:18;32976:48;33073:1;33044:22;;;33068:2;33040:31;;;33033:42;;;;33136:2;33115:15;;;-1:-1:-1;;33111:29:229;33096:45;33092:54;;32762:390;-1:-1:-1;32762:390:229:o;33157:251::-;33227:6;33280:2;33268:9;33259:7;33255:23;33251:32;33248:52;;;33296:1;33293;33286:12;33248:52;33328:9;33322:16;33347:31;33372:5;33347:31;:::i;33413:406::-;33615:2;33597:21;;;33654:2;33634:18;;;33627:30;33693:34;33688:2;33673:18;;33666:62;-1:-1:-1;;;33759:2:229;33744:18;;33737:40;33809:3;33794:19;;33413:406::o;33824:419::-;34026:2;34008:21;;;34065:2;34045:18;;;34038:30;34104:34;34099:2;34084:18;;34077:62;34175:25;34170:2;34155:18;;34148:53;34233:3;34218:19;;33824:419::o;34248:245::-;34315:6;34368:2;34356:9;34347:7;34343:23;34339:32;34336:52;;;34384:1;34381;34374:12;34336:52;34416:9;34410:16;34435:28;34457:5;34435:28;:::i;34498:404::-;34700:2;34682:21;;;34739:2;34719:18;;;34712:30;34778:34;34773:2;34758:18;;34751:62;-1:-1:-1;;;34844:2:229;34829:18;;34822:38;34892:3;34877:19;;34498:404::o;36306:329::-;36403:4;36461:11;36448:25;36555:3;36551:8;36540;36524:14;36520:29;36516:44;36496:18;36492:69;36482:97;;36575:1;36572;36565:12;37206:241;37262:6;37315:2;37303:9;37294:7;37290:23;37286:32;37283:52;;;37331:1;37328;37321:12;37283:52;37370:9;37357:23;37389:28;37411:5;37389:28;:::i;37452:754::-;37505:3;37550:1;37546;37541:3;37537:11;37533:19;37591:2;37583:5;37577:12;37573:21;37568:3;37561:34;37656:2;37648:4;37641:5;37637:16;37631:23;37627:32;37620:4;37615:3;37611:14;37604:56;37721:2;37713:4;37706:5;37702:16;37696:23;37692:32;37685:4;37680:3;37676:14;37669:56;;37774:4;37767:5;37763:16;37757:23;37750:4;37745:3;37741:14;37734:47;37842:10;37834:4;37827:5;37823:16;37817:23;37813:40;37806:4;37801:3;37797:14;37790:64;37900:4;37893:5;37889:16;37883:23;37938:4;37931;37926:3;37922:14;37915:28;37964:69;38027:4;38022:3;38018:14;38004:12;37964:69;:::i;:::-;37952:81;;38081:4;38074:5;38070:16;38064:23;38129:3;38123:4;38119:14;38112:4;38107:3;38103:14;38096:38;38150:50;38195:4;38179:14;38150:50;:::i;38211:269::-;38398:2;38387:9;38380:21;38361:4;38418:56;38470:2;38459:9;38455:18;38447:6;38418:56;:::i;38485:1255::-;38718:2;38707:9;38700:21;38681:4;38756:6;38750:13;38799:4;38794:2;38783:9;38779:18;38772:32;38827:74;38896:3;38885:9;38881:19;38867:12;38827:74;:::i;:::-;38813:88;;38950:2;38942:6;38938:15;38932:22;39022:2;39018:7;39006:9;38998:6;38994:22;38990:36;38985:2;38974:9;38970:18;38963:64;39050:52;39095:6;39079:14;39050:52;:::i;:::-;39036:66;;;39151:2;39143:6;39139:15;39133:22;39191:1;39187;39182:3;39178:11;39174:19;39249:2;39233:14;39229:23;39224:2;39213:9;39209:18;39202:51;39302:2;39294:6;39290:15;39284:22;39262:44;;39370:2;39353:14;39347:21;39343:30;39337:3;39326:9;39322:19;39315:59;;39447:26;39441:2;39425:14;39421:23;39415:30;39411:63;39405:3;39394:9;39390:19;39383:92;;39524:3;39516:6;39512:16;39506:23;39538:54;39587:3;39576:9;39572:19;39556:14;24691:10;24680:22;24668:35;;24615:94;39538:54;-1:-1:-1;39641:3:229;39629:16;;39623:23;-1:-1:-1;;;;;9951:31:229;;39705:4;39690:20;;9939:44;39655:56;9885:104;39745:306;39821:6;39829;39882:2;39870:9;39861:7;39857:23;39853:32;39850:52;;;39898:1;39895;39888:12;39850:52;39930:9;39924:16;39949:28;39971:5;39949:28;:::i;:::-;40041:2;40026:18;;;;40020:25;39996:5;;40020:25;;-1:-1:-1;;;39745:306:229:o;40534:340::-;40749:6;40738:9;40731:25;40792:2;40787;40776:9;40772:18;40765:30;40712:4;40812:56;40864:2;40853:9;40849:18;40841:6;40812:56;:::i;42610:183::-;42679:6;42732:2;42720:9;42711:7;42707:23;42703:32;42700:52;;;42748:1;42745;42738:12;42700:52;-1:-1:-1;42771:16:229;;42610:183;-1:-1:-1;42610:183:229:o;42798:670::-;42863:5;42916:3;42909:4;42901:6;42897:17;42893:27;42883:55;;42934:1;42931;42924:12;42883:55;42963:6;42957:13;42989:4;43013:71;43029:54;43080:2;43029:54;:::i;43013:71::-;43118:15;;;43204:1;43200:10;;;;43188:23;;43184:32;;;43149:12;;;;43228:15;;;43225:35;;;43256:1;43253;43246:12;43225:35;43292:2;43284:6;43280:15;43304:135;43320:6;43315:3;43312:15;43304:135;;;43386:10;;43374:23;;43417:12;;;;43337;;43304:135;;43473:1239;43621:6;43629;43682:2;43670:9;43661:7;43657:23;43653:32;43650:52;;;43698:1;43695;43688:12;43650:52;43731:9;43725:16;-1:-1:-1;;;;;43801:2:229;43793:6;43790:14;43787:34;;;43817:1;43814;43807:12;43787:34;43855:6;43844:9;43840:22;43830:32;;43900:7;43893:4;43889:2;43885:13;43881:27;43871:55;;43922:1;43919;43912:12;43871:55;43951:2;43945:9;43973:4;43997:71;44013:54;44064:2;44013:54;:::i;43997:71::-;44102:15;;;44184:1;44180:10;;;;44172:19;;44168:28;;;44133:12;;;;44208:19;;;44205:39;;;44240:1;44237;44230:12;44205:39;44264:11;;;;44284:210;44300:6;44295:3;44292:15;44284:210;;;44373:3;44367:10;44390:31;44415:5;44390:31;:::i;:::-;44434:18;;44317:12;;;;44472;;;;44284:210;;;44549:18;;;44543:25;44513:5;;-1:-1:-1;44543:25:229;;-1:-1:-1;;;44580:16:229;;;44577:36;;;44609:1;44606;44599:12;44577:36;;44632:74;44698:7;44687:8;44676:9;44672:24;44632:74;:::i;44717:128::-;44757:3;44788:1;44784:6;44781:1;44778:13;44775:39;;;44794:18;;:::i;:::-;-1:-1:-1;44830:9:229;;44717:128::o;44850:125::-;44890:4;44918:1;44915;44912:8;44909:34;;;44923:18;;:::i;:::-;-1:-1:-1;44960:9:229;;44850:125::o;49930:394::-;-1:-1:-1;;;;;50207:15:229;;;50189:34;;50259:15;;;;50254:2;50239:18;;50232:43;50306:2;50291:18;;50284:34;;;;50139:2;50124:18;;49930:394::o;50822:245::-;50880:6;50933:2;50921:9;50912:7;50908:23;50904:32;50901:52;;;50949:1;50946;50939:12;50901:52;50988:9;50975:23;51007:30;51031:5;51007:30;:::i;52122:195::-;52226:11;;-1:-1:-1;;;;;;52222:54:229;-1:-1:-1;;;;;52278:31:229;;;;52219:91;;;;52206:105;;52122:195::o;52322:760::-;52505:5;52492:19;52520:33;52545:7;52520:33;:::i;:::-;52562:62;52616:7;52610:4;52562:62;:::i;:::-;;52661:1;52655:4;52651:12;52711:2;52704:5;52700:14;52687:28;52724:33;52749:7;52724:33;:::i;:::-;52766:68;52826:7;52814:10;52766:68;:::i;:::-;;52882:2;52875:5;52871:14;52858:28;52895:32;52919:7;52895:32;:::i;:::-;52946:17;;-1:-1:-1;;;;52994:34:229;53057:3;53034:17;;;;-1:-1:-1;;;53030:44:229;52991:84;52972:104;;-1:-1:-1;;52322:760:229:o;59224:204::-;59334:9;59371:51;59407:14;59400:5;59371:51;:::i;:::-;59358:64;59224:204;-1:-1:-1;;59224:204:229:o;61377:555::-;61579:2;61561:21;;;61618:3;61598:18;;;61591:31;-1:-1:-1;;;;;;;;;;;61653:2:229;61638:18;;61631:62;61729:34;61724:2;61709:18;;61702:62;61801:34;61795:3;61780:19;;61773:63;-1:-1:-1;;;61867:3:229;61852:19;;61845:45;61922:3;61907:19;;61377:555::o;62890:666::-;63065:6;63054:9;63047:25;63028:4;63091:2;63129;63124;63113:9;63109:18;63102:30;63161:6;63155:13;63204:6;63199:2;63188:9;63184:18;63177:34;63229:1;63239:140;63253:6;63250:1;63247:13;63239:140;;;63348:14;;;63344:23;;63338:30;63314:17;;;63333:2;63310:26;63303:66;63268:10;;63239:140;;;63397:6;63394:1;63391:13;63388:91;;;63467:1;63462:2;63453:6;63442:9;63438:22;63434:31;63427:42;63388:91;-1:-1:-1;63540:2:229;63519:15;-1:-1:-1;;63515:29:229;63500:45;;;;63547:2;63496:54;;62890:666;-1:-1:-1;;;;62890:666:229:o;63561:290::-;63630:6;63683:2;63671:9;63662:7;63658:23;63654:32;63651:52;;;63699:1;63696;63689:12;63651:52;63725:16;;-1:-1:-1;;;;;;63770:32:229;;63760:43;;63750:71;;63817:1;63814;63807:12;65704:127;65765:10;65760:3;65756:20;65753:1;65746:31;65796:4;65793:1;65786:15;65820:4;65817:1;65810:15",
    "linkReferences": {},
    "immutableReferences": {
      "53499": [
        {
          "start": 10105,
          "length": 32
        }
      ],
      "55757": [
        {
          "start": 1327,
          "length": 32
        },
        {
          "start": 4220,
          "length": 32
        },
        {
          "start": 5112,
          "length": 32
        },
        {
          "start": 5920,
          "length": 32
        },
        {
          "start": 7841,
          "length": 32
        },
        {
          "start": 11167,
          "length": 32
        },
        {
          "start": 11554,
          "length": 32
        },
        {
          "start": 16991,
          "length": 32
        },
        {
          "start": 18123,
          "length": 32
        }
      ],
      "55761": [
        {
          "start": 2007,
          "length": 32
        }
      ],
      "55765": [
        {
          "start": 1511,
          "length": 32
        },
        {
          "start": 4270,
          "length": 32
        },
        {
          "start": 5162,
          "length": 32
        },
        {
          "start": 7693,
          "length": 32
        },
        {
          "start": 10962,
          "length": 32
        },
        {
          "start": 16697,
          "length": 32
        },
        {
          "start": 17957,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DELEGATION_APPROVAL_TYPEHASH()": "04a4f979",
    "DOMAIN_TYPEHASH()": "20606b70",
    "MAX_STAKER_OPT_OUT_WINDOW_BLOCKS()": "4fc40b61",
    "MAX_WITHDRAWAL_DELAY_BLOCKS()": "ca661c04",
    "STAKER_DELEGATION_TYPEHASH()": "43377382",
    "beaconChainETHStrategy()": "9104c319",
    "calculateCurrentStakerDelegationDigestHash(address,address,uint256)": "1bbce091",
    "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": "0b9f487a",
    "calculateStakerDelegationDigestHash(address,uint256,address,uint256)": "c94b5111",
    "calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))": "597b36da",
    "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)": "60d7faed",
    "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])": "33404396",
    "cumulativeWithdrawalsQueued(address)": "a1788484",
    "decreaseDelegatedShares(address,address,uint256)": "132d4967",
    "delegateTo(address,(bytes,uint256),bytes32)": "eea9064b",
    "delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)": "7f548071",
    "delegatedTo(address)": "65da1264",
    "delegationApprover(address)": "3cdeb5e0",
    "delegationApproverSaltIsSpent(address,bytes32)": "bb45fef2",
    "domainSeparator()": "f698da25",
    "earningsReceiver(address)": "5f966f14",
    "eigenPodManager()": "4665bcda",
    "getDelegatableShares(address)": "cf80873e",
    "getOperatorShares(address,address[])": "90041347",
    "getWithdrawalDelay(address[])": "0449ca39",
    "increaseDelegatedShares(address,address,uint256)": "28a573ae",
    "initialize(address,address,uint256,uint256,address[],uint256[])": "22bf40e4",
    "isDelegated(address)": "3e28391d",
    "isOperator(address)": "6d70f7ae",
    "migrateQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[])": "5cfe8d2c",
    "minWithdrawalDelayBlocks()": "c448feb8",
    "modifyOperatorDetails((address,address,uint32))": "f16172b0",
    "operatorDetails(address)": "c5e480db",
    "operatorShares(address,address)": "778e55f3",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "pendingWithdrawals(bytes32)": "b7f06ebe",
    "queueWithdrawals((address[],uint256[],address)[])": "0dd8dd02",
    "registerAsOperator((address,address,uint32),string)": "0f589e59",
    "renounceOwnership()": "715018a6",
    "setMinWithdrawalDelayBlocks(uint256)": "635bbd10",
    "setPauserRegistry(address)": "10d67a2f",
    "setStrategyWithdrawalDelayBlocks(address[],uint256[])": "1522bf02",
    "slasher()": "b1344271",
    "stakerNonce(address)": "29c77d4f",
    "stakerOptOutWindowBlocks(address)": "16928365",
    "strategyManager()": "39b70e38",
    "strategyWithdrawalDelayBlocks(address)": "c488375a",
    "transferOwnership(address)": "f2fde38b",
    "undelegate(address)": "da8be864",
    "unpause(uint256)": "fabc1cbc",
    "updateOperatorMetadataURI(string)": "99be81c8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"_strategyManager\",\"type\":\"address\"},{\"internalType\":\"contract ISlasher\",\"name\":\"_slasher\",\"type\":\"address\"},{\"internalType\":\"contract IEigenPodManager\",\"name\":\"_eigenPodManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"MinWithdrawalDelayBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"newOperatorDetails\",\"type\":\"tuple\"}],\"name\":\"OperatorDetailsModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"OperatorMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"operatorDetails\",\"type\":\"tuple\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"pauserRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"PauserRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerDelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerForceUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"StrategyWithdrawalDelayBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"WithdrawalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"oldWithdrawalRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newWithdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"WithdrawalMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"WithdrawalQueued\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_APPROVAL_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STAKER_OPT_OUT_WINDOW_BLOCKS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAWAL_DELAY_BLOCKS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKER_DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainETHStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateCurrentStakerDelegationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegationApprover\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateDelegationApprovalDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakerNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateStakerDelegationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"calculateWithdrawalRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"middlewareTimesIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAsTokens\",\"type\":\"bool\"}],\"name\":\"completeQueuedWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal[]\",\"name\":\"withdrawals\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20[][]\",\"name\":\"tokens\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[]\",\"name\":\"middlewareTimesIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"receiveAsTokens\",\"type\":\"bool[]\"}],\"name\":\"completeQueuedWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cumulativeWithdrawalsQueued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"decreaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"approverSignatureAndExpiry\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"delegateTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"stakerSignatureAndExpiry\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"approverSignatureAndExpiry\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"delegateToBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegatedTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"delegationApprover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"delegationApproverSaltIsSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"earningsReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodManager\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getDelegatableShares\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getOperatorShares\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getWithdrawalDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"increaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minWithdrawalDelayBlocks\",\"type\":\"uint256\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"_strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_withdrawalDelayBlocks\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isDelegated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce\",\"name\":\"withdrawerAndNonce\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalStartBlock\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"}],\"internalType\":\"struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]\",\"name\":\"withdrawalsToMigrate\",\"type\":\"tuple[]\"}],\"name\":\"migrateQueuedWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minWithdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"newOperatorDetails\",\"type\":\"tuple\"}],\"name\":\"modifyOperatorDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"operatorDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operatorShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"}],\"internalType\":\"struct IDelegationManager.QueuedWithdrawalParams[]\",\"name\":\"queuedWithdrawalParams\",\"type\":\"tuple[]\"}],\"name\":\"queueWithdrawals\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"registeringOperatorDetails\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"registerAsOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinWithdrawalDelayBlocks\",\"type\":\"uint256\"}],\"name\":\"setMinWithdrawalDelayBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"setPauserRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"withdrawalDelayBlocks\",\"type\":\"uint256[]\"}],\"name\":\"setStrategyWithdrawalDelayBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slasher\",\"outputs\":[{\"internalType\":\"contract ISlasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakerNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"stakerOptOutWindowBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategyWithdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"undelegate\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"withdrawalRoots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateOperatorMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\":{\"params\":{\"expiry\":\"The desired expiry time of the staker's signature\",\"operator\":\"The operator who is being delegated to\",\"staker\":\"The signing staker\"}},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"params\":{\"_delegationApprover\":\"the operator's `delegationApprover` who will be signing the delegationHash (in general)\",\"approverSalt\":\"A unique and single use value associated with the approver signature.\",\"expiry\":\"Time after which the approver's signature becomes invalid\",\"operator\":\"The account receiving delegated stake\",\"staker\":\"The account delegating their stake\"}},\"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\":{\"params\":{\"_stakerNonce\":\"The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`\",\"expiry\":\"The desired expiry time of the staker's signature\",\"operator\":\"The operator who is being delegated to\",\"staker\":\"The signing staker\"}},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)\":{\"details\":\"middlewareTimesIndex is unused, but will be used in the Slasher eventuallybeaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in any other strategies, which will be transferred to the withdrawer.\",\"params\":{\"middlewareTimesIndex\":\"is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array\",\"receiveAsTokens\":\"If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.\",\"tokens\":\"Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array. This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)\",\"withdrawal\":\"The Withdrawal to complete.\"}},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])\":{\"details\":\"See `completeQueuedWithdrawal` for relevant dev tags\",\"params\":{\"middlewareTimesIndexes\":\"One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.\",\"receiveAsTokens\":\"Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.\",\"tokens\":\"Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.\",\"withdrawals\":\"The Withdrawals to complete.\"}},\"constructor\":{\"details\":\"Initializes the immutable addresses of the strategy mananger and slasher.\"},\"decreaseDelegatedShares(address,address,uint256)\":{\"details\":\"*If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.\",\"params\":{\"shares\":\"The number of shares to decrease.\",\"staker\":\"The address to increase the delegated shares for their operator.\",\"strategy\":\"The strategy in which to decrease the delegated shares.\"}},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"details\":\"The approverSignatureAndExpiry is used in the event that:          1) the operator's `delegationApprover` address is set to a non-zero value.                  AND          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator             or their delegationApprover is the `msg.sender`, then approval is assumed.In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs\",\"params\":{\"approverSalt\":\"A unique single use value tied to an individual signature.\",\"approverSignatureAndExpiry\":\"Verifies the operator approves of this delegation\",\"operator\":\"The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer.\"}},\"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)\":{\"details\":\"If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.the operator's `delegationApprover` address is set to a non-zero value.neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover is the `msg.sender`, then approval is assumed.This function will revert if the current `block.timestamp` is equal to or exceeds the expiryIn the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs\",\"params\":{\"approverSalt\":\"Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.\",\"approverSignatureAndExpiry\":\"is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:\",\"operator\":\"The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.\",\"staker\":\"The account delegating stake to an `operator` account\",\"stakerSignatureAndExpiry\":\"Signed data from the staker authorizing delegating stake to an operator\"}},\"domainSeparator()\":{\"details\":\"The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712.\"},\"getDelegatableShares(address)\":{\"details\":\"Returns two empty arrays in the case that the Staker has no actively-delegateable shares.\"},\"getWithdrawalDelay(address[])\":{\"params\":{\"strategies\":\"The strategies to check withdrawal delays for\"}},\"increaseDelegatedShares(address,address,uint256)\":{\"details\":\"*If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.\",\"params\":{\"shares\":\"The number of shares to increase.\",\"staker\":\"The address to increase the delegated shares for their operator.\",\"strategy\":\"The strategy in which to increase the delegated shares.\"}},\"initialize(address,address,uint256,uint256,address[],uint256[])\":{\"details\":\"Initializes the addresses of the initial owner, pauser registry, and paused status. minWithdrawalDelayBlocks is set only once here\"},\"migrateQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[])\":{\"details\":\"This function is expected to be removed in the next upgrade, after all queued withdrawals have been migrated.\"},\"modifyOperatorDetails((address,address,uint32))\":{\"details\":\"The caller must have previously registered as an operator in EigenLayer.This function will revert if the caller attempts to set their `earningsReceiver` to address(0).\",\"params\":{\"newOperatorDetails\":\"is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"registerAsOperator((address,address,uint32),string)\":{\"details\":\"Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \\\"delegated to themself\\\".This function will revert if the caller attempts to set their `earningsReceiver` to address(0).Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event\",\"params\":{\"metadataURI\":\"is a URI for the operator's metadata, i.e. a link providing more details on the operator.\",\"registeringOperatorDetails\":\"is the `OperatorDetails` for the operator.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setMinWithdrawalDelayBlocks(uint256)\":{\"params\":{\"newMinWithdrawalDelayBlocks\":\"new value of `minWithdrawalDelayBlocks`.\"}},\"setStrategyWithdrawalDelayBlocks(address[],uint256[])\":{\"params\":{\"strategies\":\"The strategies to set the minimum withdrawal delay blocks for\",\"withdrawalDelayBlocks\":\"The minimum withdrawal delay blocks to set for each strategy\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateOperatorMetadataURI(string)\":{\"params\":{\"metadataURI\":\"The URI for metadata associated with an operator\"}}},\"title\":\"DelegationManager\",\"version\":1},\"userdoc\":{\"events\":{\"MinWithdrawalDelayBlocksSet(uint256,uint256)\":{\"notice\":\"Emitted when the `minWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\"},\"OperatorDetailsModified(address,(address,address,uint32))\":{\"notice\":\"Emitted when an operator updates their OperatorDetails to @param newOperatorDetails\"},\"OperatorMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when @param operator indicates that they are updating their MetadataURI string\"},\"OperatorSharesDecreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are decreased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"OperatorSharesIncreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are increased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"PauserRegistrySet(address,address)\":{\"notice\":\"Emitted when the `pauserRegistry` is set to `newPauserRegistry`.\"},\"StakerDelegated(address,address)\":{\"notice\":\"Emitted when @param staker delegates to @param operator.\"},\"StakerForceUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker is undelegated via a call not originating from the staker themself\"},\"StakerUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker undelegates from @param operator.\"},\"StrategyWithdrawalDelayBlocksSet(address,uint256,uint256)\":{\"notice\":\"Emitted when the `strategyWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"},\"WithdrawalCompleted(bytes32)\":{\"notice\":\"Emitted when a queued withdrawal is completed\"},\"WithdrawalMigrated(bytes32,bytes32)\":{\"notice\":\"Emitted when a queued withdrawal is *migrated* from the StrategyManager to the DelegationManager\"},\"WithdrawalQueued(bytes32,(address,address,address,uint256,uint32,address[],uint256[]))\":{\"notice\":\"Emitted when a new withdrawal is queued.\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_APPROVAL_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the `DelegationApproval` struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"STAKER_DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the `StakerDelegation` struct used by the contract\"},\"beaconChainETHStrategy()\":{\"notice\":\"Canonical, virtual beacon chain ETH strategy\"},\"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\":{\"notice\":\"Calculates the digestHash for a `staker` to sign to delegate to an `operator`\"},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"notice\":\"Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions.\"},\"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\":{\"notice\":\"Calculates the digest hash to be signed and used in the `delegateToBySignature` function\"},\"calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))\":{\"notice\":\"Returns the keccak256 hash of `withdrawal`.\"},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)\":{\"notice\":\"Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`\"},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])\":{\"notice\":\"Array-ified version of `completeQueuedWithdrawal`. Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`\"},\"cumulativeWithdrawalsQueued(address)\":{\"notice\":\"Mapping: staker => cumulative number of queued withdrawals they have ever initiated.\"},\"decreaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Decreases a staker's delegated share balance in a strategy.\"},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"notice\":\"Caller delegates their stake to an operator.\"},\"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)\":{\"notice\":\"Caller delegates a staker's stake to an operator with valid signatures from both parties.\"},\"delegatedTo(address)\":{\"notice\":\"Mapping: staker => operator whom the staker is currently delegated to.\"},\"delegationApprover(address)\":{\"notice\":\"Returns the delegationApprover account for an operator\"},\"delegationApproverSaltIsSpent(address,bytes32)\":{\"notice\":\"Mapping: delegationApprover => 32-byte salt => whether or not the salt has already been used by the delegationApprover.\"},\"domainSeparator()\":{\"notice\":\"Getter function for the current EIP-712 domain separator for this contract.\"},\"eigenPodManager()\":{\"notice\":\"The EigenPodManager contract for EigenLayer\"},\"getDelegatableShares(address)\":{\"notice\":\"Returns the number of actively-delegatable shares a staker has across all strategies.\"},\"getOperatorShares(address,address[])\":{\"notice\":\"Given array of strategies, returns array of shares for the operator\"},\"getWithdrawalDelay(address[])\":{\"notice\":\"Given a list of strategies, return the minimum number of blocks that must pass to withdraw from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay.\"},\"increaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Increases a staker's delegated share balance in a strategy.\"},\"isDelegated(address)\":{\"notice\":\"Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise.\"},\"isOperator(address)\":{\"notice\":\"Returns true is an operator has previously registered for delegation.\"},\"migrateQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[])\":{\"notice\":\"Migrates an array of queued withdrawals from the StrategyManager contract to this contract.\"},\"minWithdrawalDelayBlocks()\":{\"notice\":\"Global minimum withdrawal delay for all strategy withdrawals. In a prior Goerli release, we only had a global min withdrawal delay across all strategies. In addition, we now also configure withdrawal delays on a per-strategy basis. To withdraw from a strategy, max(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy]) number of blocks must have passed.  See mapping strategyWithdrawalDelayBlocks below for per-strategy withdrawal delays.\"},\"modifyOperatorDetails((address,address,uint32))\":{\"notice\":\"Updates an operator's stored `OperatorDetails`.\"},\"operatorDetails(address)\":{\"notice\":\"Returns the OperatorDetails struct associated with an `operator`.\"},\"operatorShares(address,address)\":{\"notice\":\"returns the total number of shares in `strategy` that are delegated to `operator`.Mapping: operator => strategy => total number of shares in the strategy delegated to the operator.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"pendingWithdrawals(bytes32)\":{\"notice\":\"Mapping: hash of withdrawal inputs, aka 'withdrawalRoot' => whether the withdrawal is pending\"},\"queueWithdrawals((address[],uint256[],address)[])\":{\"notice\":\"Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from their operator. All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay.\"},\"registerAsOperator((address,address,uint32),string)\":{\"notice\":\"Registers the caller as an operator in EigenLayer.\"},\"setMinWithdrawalDelayBlocks(uint256)\":{\"notice\":\"Owner-only function for modifying the value of the `minWithdrawalDelayBlocks` variable.\"},\"setPauserRegistry(address)\":{\"notice\":\"Allows the unpauser to set a new pauser registry\"},\"setStrategyWithdrawalDelayBlocks(address[],uint256[])\":{\"notice\":\"Called by owner to set the minimum withdrawal delay blocks for each passed in strategy Note that the min number of blocks to complete a withdrawal of a strategy is  MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])\"},\"slasher()\":{\"notice\":\"The Slasher contract for EigenLayer\"},\"stakerNonce(address)\":{\"notice\":\"Mapping: staker => number of signed messages (used in `delegateToBySignature`) from the staker that this contract has already checked.\"},\"stakerOptOutWindowBlocks(address)\":{\"notice\":\"Returns the stakerOptOutWindowBlocks for an operator\"},\"strategyManager()\":{\"notice\":\"The StrategyManager contract for EigenLayer\"},\"strategyWithdrawalDelayBlocks(address)\":{\"notice\":\"Minimum delay enforced by this contract per Strategy for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced).\"},\"undelegate(address)\":{\"notice\":\"Allows the staker, the staker's operator, or that operator's delegationApprover to undelegate a staker from their operator. Undelegation immediately removes ALL active shares/strategies from both the staker and operator, and places the shares and strategies in the withdrawal queue\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateOperatorMetadataURI(string)\":{\"notice\":\"Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated.\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceThis is the contract for delegation in EigenLayer. The main functionalities of this contract are - enabling anyone to register as an operator in EigenLayer - allowing operators to specify parameters related to stakers who delegate to them - enabling any staker to delegate its stake to the operator of its choice (a given staker can only delegate to a single operator at a time) - enabling a staker to undelegate its assets from the operator it is delegated to (performed as part of the withdrawal process, initiated through the StrategyManager)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/core/DelegationManager.sol\":\"DelegationManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f\",\"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF\"]},\"src/contracts/core/DelegationManager.sol\":{\"keccak256\":\"0xb772a65de86f4cad2ec7f98d4e395d60620c85a7d7ef3106de4ca627e715f0a4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1c4f2cd8a588726f3fbcae142aab5478837577b7f228d4b6113d6faa9a4c4f57\",\"dweb:/ipfs/QmRJsz7nnqkRoEKx9rzf3AWrSN2DxHWhGDe6qtMgP8Wym6\"]},\"src/contracts/core/DelegationManagerStorage.sol\":{\"keccak256\":\"0xd834e9bc2f4d03545102004ffa9651e5bf9b559d43e4102bf2955314ef2d94f5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c7670995b7ca634f94848f426b36278f98389c120b177b737ef325bd457ca00\",\"dweb:/ipfs/QmRtLyA4Kq5TrhhhXQAp2jAH7bJ5gqbjrr1JesD6wRbqqV\"]},\"src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983\",\"dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18\"]},\"src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xe1626408822f552043f945d9aea18c5cbf878ef160da55e6f98706ed3a2acc07\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://426f6dddc040f2040f48dd4236c4201a3c978b4417ec3b4bd1004f8a48b29aaa\",\"dweb:/ipfs/QmWgY46nZiw1KQYNYMrJDTz7S9Y4KhyUoM9zVD92Mkf51S\"]},\"src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc\",\"dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR\"]},\"src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0xd8a64dbed03d3a5cdbefe1af75968f2dde07f973749c2ef5197bf7187c3e448c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://27ccc7c1fd9352e9f9b357c9063d255dc0ed9583f43db09f786ac7497d7846b8\",\"dweb:/ipfs/QmeJzuJkE9m2NUNwZSp4tGZEZmih1LeucePup8hzMVDRbG\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324\",\"dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c\",\"dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9\"]},\"src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232\",\"dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xccd308b0996295c92058b70c3b83563c009c074cb6815329c5f35e1b1a0571f4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cd1050445ff7aeb588b3b037aab53e2d92c3abd4620e94dfc95aca870e71b821\",\"dweb:/ipfs/QmUC96Ctwn3KQr6VSqHPpAVJ5qEUSVnugaxiZ8gfXygW92\"]},\"src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x70d89b05c1c5f47b74a07fbb5a2c05e606fed494e749ea98a9915b7be73df377\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://db1d3bfaee69aef53c8b12b492a17584e6d1ac94610cb8b38aad33e1cdd81af7\",\"dweb:/ipfs/QmfVsMTj1hcf9fMEm5RzvtcBN4dMcAKFBgUUDsNDr5XFpq\"]},\"src/contracts/libraries/EIP1271SignatureUtils.sol\":{\"keccak256\":\"0xe92d584c47c5828e026a8082af3da38a853e3942c4da7deb705d6470a41afab3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1c436c578781fd7d3dffdb24e906819422819f5e9a71d39ee63166a3d5cb3373\",\"dweb:/ipfs/QmP7bJhYqLpwqk2Xq4tqDCUMi2nFAhxxW3Pz36ctE1sbdD\"]},\"src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f\",\"dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ\"]},\"src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x9095fc29b96d102b10c02d44b3a6fbfa25593ef6ae4a810363ab885b9e6b0f71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0945132d482d56278edddb1d32209903c4d3839c87ba4317aadd97dc23610d0f\",\"dweb:/ipfs/QmVuM2aLRHxitx4rPx3GTYTBCVNcjYn6sHBRr1biUjLBP5\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xce8ee0ab28f2bce9e94aa19fffe55bebef080327632ac98ff3ab14994b369bc0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5c7e2be97a8840fa2a0434077a36136553a84efd9bff4b46712ce9fddb813a6a\",\"dweb:/ipfs/QmZKvgPxLAbGo1CqTA4AX6MCDPFLSSNt43ZKWRjvvzFp7S\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "_strategyManager",
              "type": "address"
            },
            {
              "internalType": "contract ISlasher",
              "name": "_slasher",
              "type": "address"
            },
            {
              "internalType": "contract IEigenPodManager",
              "name": "_eigenPodManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "previousValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MinWithdrawalDelayBlocksSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IDelegationManager.OperatorDetails",
              "name": "newOperatorDetails",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earningsReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegationApprover",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "stakerOptOutWindowBlocks",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorDetailsModified",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorMetadataURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IDelegationManager.OperatorDetails",
              "name": "operatorDetails",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earningsReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegationApprover",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "stakerOptOutWindowBlocks",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSharesDecreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSharesIncreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "pauserRegistry",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "newPauserRegistry",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PauserRegistrySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakerDelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakerForceUndelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakerUndelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "previousValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyWithdrawalDelayBlocksSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalCompleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "oldWithdrawalRoot",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "newWithdrawalRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalMigrated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "struct IDelegationManager.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalQueued",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DELEGATION_APPROVAL_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_STAKER_OPT_OUT_WINDOW_BLOCKS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_WITHDRAWAL_DELAY_BLOCKS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKER_DELEGATION_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "beaconChainETHStrategy",
          "outputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateCurrentStakerDelegationDigestHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_delegationApprover",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "approverSalt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateDelegationApprovalDigestHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_stakerNonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateStakerDelegationDigestHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateWithdrawalRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.Withdrawal",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "middlewareTimesIndex",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "receiveAsTokens",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "completeQueuedWithdrawal"
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.Withdrawal[]",
              "name": "withdrawals",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegatedTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "contract IERC20[][]",
              "name": "tokens",
              "type": "address[][]"
            },
            {
              "internalType": "uint256[]",
              "name": "middlewareTimesIndexes",
              "type": "uint256[]"
            },
            {
              "internalType": "bool[]",
              "name": "receiveAsTokens",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "completeQueuedWithdrawals"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cumulativeWithdrawalsQueued",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseDelegatedShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct ISignatureUtils.SignatureWithExpiry",
              "name": "approverSignatureAndExpiry",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "approverSalt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct ISignatureUtils.SignatureWithExpiry",
              "name": "stakerSignatureAndExpiry",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct ISignatureUtils.SignatureWithExpiry",
              "name": "approverSignatureAndExpiry",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "approverSalt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateToBySignature"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegatedTo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegationApprover",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegationApproverSaltIsSpent",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "earningsReceiver",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eigenPodManager",
          "outputs": [
            {
              "internalType": "contract IEigenPodManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDelegatableShares",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorShares",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getWithdrawalDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseDelegatedShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minWithdrawalDelayBlocks",
              "type": "uint256"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "_strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_withdrawalDelayBlocks",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDelegated",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]",
              "name": "withdrawalsToMigrate",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "staker",
                  "type": "address"
                },
                {
                  "internalType": "struct IStrategyManager.DeprecatedStruct_WithdrawerAndNonce",
                  "name": "withdrawerAndNonce",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "withdrawer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "nonce",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "withdrawalStartBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "delegatedAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "migrateQueuedWithdrawals"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minWithdrawalDelayBlocks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.OperatorDetails",
              "name": "newOperatorDetails",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earningsReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegationApprover",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "stakerOptOutWindowBlocks",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyOperatorDetails"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorDetails",
          "outputs": [
            {
              "internalType": "struct IDelegationManager.OperatorDetails",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earningsReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegationApprover",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "stakerOptOutWindowBlocks",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingWithdrawals",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.QueuedWithdrawalParams[]",
              "name": "queuedWithdrawalParams",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "queueWithdrawals",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDelegationManager.OperatorDetails",
              "name": "registeringOperatorDetails",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "earningsReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "delegationApprover",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "stakerOptOutWindowBlocks",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerAsOperator"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newMinWithdrawalDelayBlocks",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinWithdrawalDelayBlocks"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "newPauserRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPauserRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "withdrawalDelayBlocks",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategyWithdrawalDelayBlocks"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "slasher",
          "outputs": [
            {
              "internalType": "contract ISlasher",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerOptOutWindowBlocks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyManager",
          "outputs": [
            {
              "internalType": "contract IStrategyManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyWithdrawalDelayBlocks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "undelegate",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "withdrawalRoots",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOperatorMetadataURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "calculateCurrentStakerDelegationDigestHash(address,address,uint256)": {
            "params": {
              "expiry": "The desired expiry time of the staker's signature",
              "operator": "The operator who is being delegated to",
              "staker": "The signing staker"
            }
          },
          "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": {
            "params": {
              "_delegationApprover": "the operator's `delegationApprover` who will be signing the delegationHash (in general)",
              "approverSalt": "A unique and single use value associated with the approver signature.",
              "expiry": "Time after which the approver's signature becomes invalid",
              "operator": "The account receiving delegated stake",
              "staker": "The account delegating their stake"
            }
          },
          "calculateStakerDelegationDigestHash(address,uint256,address,uint256)": {
            "params": {
              "_stakerNonce": "The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`",
              "expiry": "The desired expiry time of the staker's signature",
              "operator": "The operator who is being delegated to",
              "staker": "The signing staker"
            }
          },
          "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)": {
            "details": "middlewareTimesIndex is unused, but will be used in the Slasher eventuallybeaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in any other strategies, which will be transferred to the withdrawer.",
            "params": {
              "middlewareTimesIndex": "is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array",
              "receiveAsTokens": "If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.",
              "tokens": "Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array. This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)",
              "withdrawal": "The Withdrawal to complete."
            }
          },
          "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])": {
            "details": "See `completeQueuedWithdrawal` for relevant dev tags",
            "params": {
              "middlewareTimesIndexes": "One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.",
              "receiveAsTokens": "Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.",
              "tokens": "Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.",
              "withdrawals": "The Withdrawals to complete."
            }
          },
          "constructor": {
            "details": "Initializes the immutable addresses of the strategy mananger and slasher."
          },
          "decreaseDelegatedShares(address,address,uint256)": {
            "details": "*If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.",
            "params": {
              "shares": "The number of shares to decrease.",
              "staker": "The address to increase the delegated shares for their operator.",
              "strategy": "The strategy in which to decrease the delegated shares."
            }
          },
          "delegateTo(address,(bytes,uint256),bytes32)": {
            "details": "The approverSignatureAndExpiry is used in the event that:          1) the operator's `delegationApprover` address is set to a non-zero value.                  AND          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator             or their delegationApprover is the `msg.sender`, then approval is assumed.In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs",
            "params": {
              "approverSalt": "A unique single use value tied to an individual signature.",
              "approverSignatureAndExpiry": "Verifies the operator approves of this delegation",
              "operator": "The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer."
            }
          },
          "delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)": {
            "details": "If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.the operator's `delegationApprover` address is set to a non-zero value.neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover is the `msg.sender`, then approval is assumed.This function will revert if the current `block.timestamp` is equal to or exceeds the expiryIn the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs",
            "params": {
              "approverSalt": "Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.",
              "approverSignatureAndExpiry": "is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:",
              "operator": "The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.",
              "staker": "The account delegating stake to an `operator` account",
              "stakerSignatureAndExpiry": "Signed data from the staker authorizing delegating stake to an operator"
            }
          },
          "domainSeparator()": {
            "details": "The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712."
          },
          "getDelegatableShares(address)": {
            "details": "Returns two empty arrays in the case that the Staker has no actively-delegateable shares."
          },
          "getWithdrawalDelay(address[])": {
            "params": {
              "strategies": "The strategies to check withdrawal delays for"
            }
          },
          "increaseDelegatedShares(address,address,uint256)": {
            "details": "*If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.",
            "params": {
              "shares": "The number of shares to increase.",
              "staker": "The address to increase the delegated shares for their operator.",
              "strategy": "The strategy in which to increase the delegated shares."
            }
          },
          "initialize(address,address,uint256,uint256,address[],uint256[])": {
            "details": "Initializes the addresses of the initial owner, pauser registry, and paused status. minWithdrawalDelayBlocks is set only once here"
          },
          "migrateQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[])": {
            "details": "This function is expected to be removed in the next upgrade, after all queued withdrawals have been migrated."
          },
          "modifyOperatorDetails((address,address,uint32))": {
            "details": "The caller must have previously registered as an operator in EigenLayer.This function will revert if the caller attempts to set their `earningsReceiver` to address(0).",
            "params": {
              "newOperatorDetails": "is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "registerAsOperator((address,address,uint32),string)": {
            "details": "Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \"delegated to themself\".This function will revert if the caller attempts to set their `earningsReceiver` to address(0).Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event",
            "params": {
              "metadataURI": "is a URI for the operator's metadata, i.e. a link providing more details on the operator.",
              "registeringOperatorDetails": "is the `OperatorDetails` for the operator."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setMinWithdrawalDelayBlocks(uint256)": {
            "params": {
              "newMinWithdrawalDelayBlocks": "new value of `minWithdrawalDelayBlocks`."
            }
          },
          "setStrategyWithdrawalDelayBlocks(address[],uint256[])": {
            "params": {
              "strategies": "The strategies to set the minimum withdrawal delay blocks for",
              "withdrawalDelayBlocks": "The minimum withdrawal delay blocks to set for each strategy"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "updateOperatorMetadataURI(string)": {
            "params": {
              "metadataURI": "The URI for metadata associated with an operator"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DELEGATION_APPROVAL_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the `DelegationApproval` struct used by the contract"
          },
          "DOMAIN_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the contract's domain"
          },
          "STAKER_DELEGATION_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the `StakerDelegation` struct used by the contract"
          },
          "beaconChainETHStrategy()": {
            "notice": "Canonical, virtual beacon chain ETH strategy"
          },
          "calculateCurrentStakerDelegationDigestHash(address,address,uint256)": {
            "notice": "Calculates the digestHash for a `staker` to sign to delegate to an `operator`"
          },
          "calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)": {
            "notice": "Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions."
          },
          "calculateStakerDelegationDigestHash(address,uint256,address,uint256)": {
            "notice": "Calculates the digest hash to be signed and used in the `delegateToBySignature` function"
          },
          "calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))": {
            "notice": "Returns the keccak256 hash of `withdrawal`."
          },
          "completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)": {
            "notice": "Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`"
          },
          "completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])": {
            "notice": "Array-ified version of `completeQueuedWithdrawal`. Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`"
          },
          "cumulativeWithdrawalsQueued(address)": {
            "notice": "Mapping: staker => cumulative number of queued withdrawals they have ever initiated."
          },
          "decreaseDelegatedShares(address,address,uint256)": {
            "notice": "Decreases a staker's delegated share balance in a strategy."
          },
          "delegateTo(address,(bytes,uint256),bytes32)": {
            "notice": "Caller delegates their stake to an operator."
          },
          "delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)": {
            "notice": "Caller delegates a staker's stake to an operator with valid signatures from both parties."
          },
          "delegatedTo(address)": {
            "notice": "Mapping: staker => operator whom the staker is currently delegated to."
          },
          "delegationApprover(address)": {
            "notice": "Returns the delegationApprover account for an operator"
          },
          "delegationApproverSaltIsSpent(address,bytes32)": {
            "notice": "Mapping: delegationApprover => 32-byte salt => whether or not the salt has already been used by the delegationApprover."
          },
          "domainSeparator()": {
            "notice": "Getter function for the current EIP-712 domain separator for this contract."
          },
          "eigenPodManager()": {
            "notice": "The EigenPodManager contract for EigenLayer"
          },
          "getDelegatableShares(address)": {
            "notice": "Returns the number of actively-delegatable shares a staker has across all strategies."
          },
          "getOperatorShares(address,address[])": {
            "notice": "Given array of strategies, returns array of shares for the operator"
          },
          "getWithdrawalDelay(address[])": {
            "notice": "Given a list of strategies, return the minimum number of blocks that must pass to withdraw from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay."
          },
          "increaseDelegatedShares(address,address,uint256)": {
            "notice": "Increases a staker's delegated share balance in a strategy."
          },
          "isDelegated(address)": {
            "notice": "Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."
          },
          "isOperator(address)": {
            "notice": "Returns true is an operator has previously registered for delegation."
          },
          "migrateQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[])": {
            "notice": "Migrates an array of queued withdrawals from the StrategyManager contract to this contract."
          },
          "minWithdrawalDelayBlocks()": {
            "notice": "Global minimum withdrawal delay for all strategy withdrawals. In a prior Goerli release, we only had a global min withdrawal delay across all strategies. In addition, we now also configure withdrawal delays on a per-strategy basis. To withdraw from a strategy, max(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy]) number of blocks must have passed.  See mapping strategyWithdrawalDelayBlocks below for per-strategy withdrawal delays."
          },
          "modifyOperatorDetails((address,address,uint32))": {
            "notice": "Updates an operator's stored `OperatorDetails`."
          },
          "operatorDetails(address)": {
            "notice": "Returns the OperatorDetails struct associated with an `operator`."
          },
          "operatorShares(address,address)": {
            "notice": "returns the total number of shares in `strategy` that are delegated to `operator`.Mapping: operator => strategy => total number of shares in the strategy delegated to the operator."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "pendingWithdrawals(bytes32)": {
            "notice": "Mapping: hash of withdrawal inputs, aka 'withdrawalRoot' => whether the withdrawal is pending"
          },
          "queueWithdrawals((address[],uint256[],address)[])": {
            "notice": "Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from their operator. All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay."
          },
          "registerAsOperator((address,address,uint32),string)": {
            "notice": "Registers the caller as an operator in EigenLayer."
          },
          "setMinWithdrawalDelayBlocks(uint256)": {
            "notice": "Owner-only function for modifying the value of the `minWithdrawalDelayBlocks` variable."
          },
          "setPauserRegistry(address)": {
            "notice": "Allows the unpauser to set a new pauser registry"
          },
          "setStrategyWithdrawalDelayBlocks(address[],uint256[])": {
            "notice": "Called by owner to set the minimum withdrawal delay blocks for each passed in strategy Note that the min number of blocks to complete a withdrawal of a strategy is  MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])"
          },
          "slasher()": {
            "notice": "The Slasher contract for EigenLayer"
          },
          "stakerNonce(address)": {
            "notice": "Mapping: staker => number of signed messages (used in `delegateToBySignature`) from the staker that this contract has already checked."
          },
          "stakerOptOutWindowBlocks(address)": {
            "notice": "Returns the stakerOptOutWindowBlocks for an operator"
          },
          "strategyManager()": {
            "notice": "The StrategyManager contract for EigenLayer"
          },
          "strategyWithdrawalDelayBlocks(address)": {
            "notice": "Minimum delay enforced by this contract per Strategy for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced)."
          },
          "undelegate(address)": {
            "notice": "Allows the staker, the staker's operator, or that operator's delegationApprover to undelegate a staker from their operator. Undelegation immediately removes ALL active shares/strategies from both the staker and operator, and places the shares and strategies in the withdrawal queue"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "updateOperatorMetadataURI(string)": {
            "notice": "Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/core/DelegationManager.sol": "DelegationManager"
      },
      "evmVersion": "london",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481",
        "urls": [
          "bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f",
          "dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF"
        ],
        "license": "MIT"
      },
      "src/contracts/core/DelegationManager.sol": {
        "keccak256": "0xb772a65de86f4cad2ec7f98d4e395d60620c85a7d7ef3106de4ca627e715f0a4",
        "urls": [
          "bzz-raw://1c4f2cd8a588726f3fbcae142aab5478837577b7f228d4b6113d6faa9a4c4f57",
          "dweb:/ipfs/QmRJsz7nnqkRoEKx9rzf3AWrSN2DxHWhGDe6qtMgP8Wym6"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/core/DelegationManagerStorage.sol": {
        "keccak256": "0xd834e9bc2f4d03545102004ffa9651e5bf9b559d43e4102bf2955314ef2d94f5",
        "urls": [
          "bzz-raw://9c7670995b7ca634f94848f426b36278f98389c120b177b737ef325bd457ca00",
          "dweb:/ipfs/QmRtLyA4Kq5TrhhhXQAp2jAH7bJ5gqbjrr1JesD6wRbqqV"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IBeaconChainOracle.sol": {
        "keccak256": "0x0fef07aa6179c77198f1514e12e628aa1c876e04f9c181ec853a322179e5be00",
        "urls": [
          "bzz-raw://51438325876cc2d4c77f58488a7e27b488015d1b663c50be6a5cafbd73b9c983",
          "dweb:/ipfs/QmViCuGoYZzi6wtXA8PPKigqVv3KMuNxEVQ1Td9dGqjL18"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0xe1626408822f552043f945d9aea18c5cbf878ef160da55e6f98706ed3a2acc07",
        "urls": [
          "bzz-raw://426f6dddc040f2040f48dd4236c4201a3c978b4417ec3b4bd1004f8a48b29aaa",
          "dweb:/ipfs/QmWgY46nZiw1KQYNYMrJDTz7S9Y4KhyUoM9zVD92Mkf51S"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IETHPOSDeposit.sol": {
        "keccak256": "0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c",
        "urls": [
          "bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91",
          "dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"
        ],
        "license": "CC0-1.0"
      },
      "src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0xb50c36ad96b6679bb80fd8331f949cbfbcba0f529026e1421a4d2bae64396eba",
        "urls": [
          "bzz-raw://5719181d780120f1e688c0da276992a8caf185815917f453b3550537c31ed4cc",
          "dweb:/ipfs/QmYprRC5ZEXhz3zAUND5E8Xjn6s5TL8ZF8QbnndVq7aVPR"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0xd8a64dbed03d3a5cdbefe1af75968f2dde07f973749c2ef5197bf7187c3e448c",
        "urls": [
          "bzz-raw://27ccc7c1fd9352e9f9b357c9063d255dc0ed9583f43db09f786ac7497d7846b8",
          "dweb:/ipfs/QmeJzuJkE9m2NUNwZSp4tGZEZmih1LeucePup8hzMVDRbG"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x98cffc894842947377e24c1d375813a1120dd73a84c29782ab68404e109cb34f",
        "urls": [
          "bzz-raw://b3474f6c350ceaee57cbdfb08fb48835d0c6e81ae8ebfbb9667899584a139324",
          "dweb:/ipfs/QmWELKtksdtWxQbqAccd8yGyhKqrgPZXTADKR7BuT27Zg5"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49",
        "urls": [
          "bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d",
          "dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5e52482a31d94401a8502f3014c4aada1142b4450fc0596dff8e1866a85fe092",
        "urls": [
          "bzz-raw://17dc326c9361bc1453379f26545963557b2883b0c88bc07d4477e04dbcc0cc8c",
          "dweb:/ipfs/QmZXT7A816W5JH2ymirE2ETaJttqztFCsEL22AV8oEfCK9"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISlasher.sol": {
        "keccak256": "0x45dfaa2cfdde87f48a6ee38bb6fb739847aef7cf3f6137bdcd8c8a330559ec79",
        "urls": [
          "bzz-raw://1b7f6bd75b42fcaa91ceb7140cb2c41926a1fe6ee2d3161e4fe6186b181ba232",
          "dweb:/ipfs/QmZjbdKiSs33C9i3GDc3sdD39Pz4YPkDoKftowoUF4kHmY"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420",
        "urls": [
          "bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73",
          "dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0xccd308b0996295c92058b70c3b83563c009c074cb6815329c5f35e1b1a0571f4",
        "urls": [
          "bzz-raw://cd1050445ff7aeb588b3b037aab53e2d92c3abd4620e94dfc95aca870e71b821",
          "dweb:/ipfs/QmUC96Ctwn3KQr6VSqHPpAVJ5qEUSVnugaxiZ8gfXygW92"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x70d89b05c1c5f47b74a07fbb5a2c05e606fed494e749ea98a9915b7be73df377",
        "urls": [
          "bzz-raw://db1d3bfaee69aef53c8b12b492a17584e6d1ac94610cb8b38aad33e1cdd81af7",
          "dweb:/ipfs/QmfVsMTj1hcf9fMEm5RzvtcBN4dMcAKFBgUUDsNDr5XFpq"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/EIP1271SignatureUtils.sol": {
        "keccak256": "0xe92d584c47c5828e026a8082af3da38a853e3942c4da7deb705d6470a41afab3",
        "urls": [
          "bzz-raw://1c436c578781fd7d3dffdb24e906819422819f5e9a71d39ee63166a3d5cb3373",
          "dweb:/ipfs/QmP7bJhYqLpwqk2Xq4tqDCUMi2nFAhxxW3Pz36ctE1sbdD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Endian.sol": {
        "keccak256": "0xf3b72653ba2567a978d4612703fa5f71c5fcd015d8dac7818468f22772d90a9d",
        "urls": [
          "bzz-raw://cee9d09370d968138d775c39525db4cd0768d60d17be7685519de12444e7dd2f",
          "dweb:/ipfs/QmUdGh8wpMei3edKiEWA6S96s9dRt4ekZKJ4nau356X8xQ"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x9095fc29b96d102b10c02d44b3a6fbfa25593ef6ae4a810363ab885b9e6b0f71",
        "urls": [
          "bzz-raw://0945132d482d56278edddb1d32209903c4d3839c87ba4317aadd97dc23610d0f",
          "dweb:/ipfs/QmVuM2aLRHxitx4rPx3GTYTBCVNcjYn6sHBRr1biUjLBP5"
        ],
        "license": "MIT"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xce8ee0ab28f2bce9e94aa19fffe55bebef080327632ac98ff3ab14994b369bc0",
        "urls": [
          "bzz-raw://5c7e2be97a8840fa2a0434077a36136553a84efd9bff4b46712ce9fddb813a6a",
          "dweb:/ipfs/QmZKvgPxLAbGo1CqTA4AX6MCDPFLSSNt43ZKWRjvvzFp7S"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 102
}
